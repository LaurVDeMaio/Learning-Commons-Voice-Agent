import { Node as GraphConfigNode } from '../../graph_config_schema';
import { AbstractNode, AbstractNodeProps } from './AbstractNode';
/**
 * Configuration interface for KeywordMatcherNode creation.
 */
interface KeywordMatcherNodeProps extends AbstractNodeProps {
    /** List of keywords to match */
    keywords: string[];
}
/**
 * Keyword matcher node that matches keywords in text input.
 * This node processes text input and identifies matching keywords from a predefined list.
 *
 * @input {TextData} {@link TextData} - The data type that KeywordMatcherNode accepts as input
 * @output {MatchedKeywords} {@link MatchedKeywordsData} - The data type that KeywordMatcherNode accepts as output
 *
 * @example
 * ```typescript
 * const keywordNode = new KeywordMatcherNode({
 *   id: 'my-keyword-node',
 *   keywords: ['urgent', 'important', 'priority', 'asap'],
 *   reportToClient: true
 * });
 * ```
 */
export declare class KeywordMatcherNode extends AbstractNode {
    private keywords;
    /**
     * Creates a new KeywordMatcherNode instance.
     *
     * @param props - Configuration for the keyword matcher node
     */
    constructor(props: KeywordMatcherNodeProps);
    /**
     * Converts the keyword matcher node to a graph configuration node.
     *
     * @returns The configured keyword matcher node for graph execution
     */
    protected toGraphConfigNode(): GraphConfigNode;
}
export {};

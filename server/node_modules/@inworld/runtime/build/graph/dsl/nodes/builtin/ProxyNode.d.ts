import { Node as GraphConfigNode } from '../../graph_config_schema';
import { AbstractNode, AbstractNodeProps } from './AbstractNode';
/**
 * Proxy node for simple data passing.
 * This node passes through any input data without modification, useful for routing
 * or creating connection points in graphs.
 *
 * @input {any} any - The data type that ProxyNode accepts as input
 * @output {any} any - The data type that ProxyNode accepts as output
 *
 * @example
 * ```typescript
 * const proxyNode = new ProxyNode({
 *   id: 'my-proxy-node',
 *   reportToClient: false
 * });
 * ```
 */
export declare class ProxyNode extends AbstractNode {
    /**
     * Creates a new ProxyNode instance.
     *
     * @param props - Configuration for the proxy node
     */
    constructor(props?: AbstractNodeProps);
    /**
     * Converts the proxy node to a graph configuration node.
     *
     * @returns The configured proxy node for graph execution
     */
    protected toGraphConfigNode(): GraphConfigNode;
}

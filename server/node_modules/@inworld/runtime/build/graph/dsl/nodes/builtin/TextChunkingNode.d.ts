import { Node as GraphConfigNode } from '../../graph_config_schema';
import { AbstractNode, AbstractNodeProps } from './AbstractNode';
/**
 * Text chunking node for breaking large text into smaller pieces (a stream of token chunks).
 * This node processes streaming text data and converts it into discrete text chunks.
 *
 * @input {TextStreamData} {@link TextStreamData} - The data type that TextChunkingNode accepts as input
 * @output {TextData} {@link TextData} - The data type that TextChunkingNode accepts as output
 *
 * @example
 * ```typescript
 * const chunkingNode = new TextChunkingNode({
 *   id: 'my-chunking-node',
 *   reportToClient: true
 * });
 * ```
 */
export declare class TextChunkingNode extends AbstractNode {
    /**
     * Creates a new TextChunkingNode instance.
     *
     * @param props - Configuration for the text chunking node
     */
    constructor(props?: AbstractNodeProps);
    /**
     * Converts the text chunking node to a graph configuration node.
     *
     * @returns The configured text chunking node for graph execution
     */
    protected toGraphConfigNode(): GraphConfigNode;
}

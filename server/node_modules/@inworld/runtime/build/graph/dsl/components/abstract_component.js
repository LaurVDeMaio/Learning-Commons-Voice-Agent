"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AbstractComponent = exports.TO_GRAPH_CONFIG_COMPONENT = void 0;
exports.TO_GRAPH_CONFIG_COMPONENT = Symbol('to_graph_config_component');
/**
 * Abstract base class for all DSL components.
 *
 * Provides common functionality such as ID generation and conversion to a
 * graph configuration component.
 */
class AbstractComponent {
    /**
     * Creates a new `AbstractComponent`.
     *
     * @param {Object} [props] - Component configuration
     * @param {string} [props.id] - Optional explicit component identifier. Human-readable identifier would be generated if omitted.
     */
    constructor(props = {}) {
        var _a;
        this.id = (_a = props.id) !== null && _a !== void 0 ? _a : AbstractComponent.getId(this.constructor.name);
    }
    static getId(type) {
        if (!AbstractComponent.componentsByTypeCounter[type]) {
            AbstractComponent.componentsByTypeCounter[type] = 0;
            return type;
        }
        AbstractComponent.componentsByTypeCounter[type]++;
        return `${type}-${AbstractComponent.componentsByTypeCounter[type]}`;
    }
    /**
     * Converts this DSL component to a serializable graph configuration component.
     */
    [exports.TO_GRAPH_CONFIG_COMPONENT]() {
        return this.toGraphConfigComponent();
    }
}
exports.AbstractComponent = AbstractComponent;
AbstractComponent.componentsByTypeCounter = {};

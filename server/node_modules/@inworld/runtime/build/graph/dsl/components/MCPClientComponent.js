"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MCPClientComponent = void 0;
const snakify_1 = __importDefault(require("../utils/snakify"));
const AbstractComponent_1 = require("./AbstractComponent");
/**
 * MCP client component for Model Context Protocol services.
 * This component provides access to MCP servers for tool calling and context management,
 * enabling integration with external tools and services through the MCP protocol.
 *
 * @example
 * ```typescript
 * const mcpComponent = new MCPClientComponent({
 *   id: 'my-mcp-component',
 *   sessionConfig: {
 *     serverPath: '/path/to/mcp-server',
 *     serverArgs: ['--config', 'config.json'],
 *     timeout: 30000
 *   }
 * });
 * ```
 */
class MCPClientComponent extends AbstractComponent_1.AbstractComponent {
    /**
     * Creates a new MCPClientComponent instance.
     *
     * @param props - Configuration for the MCP client component
     */
    constructor(props) {
        super(props);
        this.sessionConfig = props.sessionConfig;
    }
    /**
     * Converts the MCP client component to a graph configuration component.
     *
     * @returns The configured MCP client component for graph execution
     */
    toGraphConfigComponent() {
        return {
            id: this.id,
            type: 'MCPClientInterface',
            creation_config: {
                type: 'MCPClientCreationConfig',
                properties: {
                    session_config: (0, snakify_1.default)(this.sessionConfig),
                },
            },
        };
    }
}
exports.MCPClientComponent = MCPClientComponent;

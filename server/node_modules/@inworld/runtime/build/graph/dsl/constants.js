"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DEFAULT_TTS_VOICE = exports.DEFAULT_SPEECH_SYNTHESIS_CONFIG = exports.DEFAULT_TTS_MODEL_ID = exports.DEFAULT_SPEECH_RECOGNITION_CONFIG = exports.DEFAULT_INTENT_MATCHER_CONFIG = exports.DEFAULT_RETRIEVAL_CONFIG = exports.DEFAULT_LLM_MODEL_NAME = exports.DEFAULT_INTENT_SUBGRAPH_CONFIG = exports.DEFAULT_EMBEDDER_MODEL_NAME = exports.DEFAULT_TEXT_CONFIG = exports.DEFAULT_PROVIDER = void 0;
/**
 * Default provider for LLM and embedding services.
 * Standard provider used for accessing AI services.
 *
 * @type {string}
 */
exports.DEFAULT_PROVIDER = 'inworld';
/**
 * Default text generation configuration for LLM nodes.
 * Provides standard settings for text generation with reasonable defaults.
 *
 * @property {number} max_new_tokens - Maximum number of tokens to generate (2500)
 * @property {number} max_prompt_length - Maximum prompt length (100)
 * @property {number} repetition_penalty - Penalty for repetition (1)
 * @property {number} top_p - Nucleus sampling parameter (1)
 * @property {number} temperature - Sampling temperature (1)
 * @property {number} frequency_penalty - Frequency penalty (0)
 * @property {number} presence_penalty - Presence penalty (0)
 * @property {Array<string>} stop_sequences - Sequences that stop generation ([])
 */
exports.DEFAULT_TEXT_CONFIG = {
    max_new_tokens: 2500,
    max_prompt_length: 100,
    repetition_penalty: 1,
    top_p: 1,
    temperature: 1,
    frequency_penalty: 0,
    presence_penalty: 0,
    stop_sequences: [],
};
/**
 * Default embedder model name for text embedding.
 * Standard model used for creating text embeddings and similarity matching.
 *
 * @type {string}
 */
exports.DEFAULT_EMBEDDER_MODEL_NAME = 'BAAI/bge-large-en-v1.5';
/**
 * Default configuration for intent subgraph.
 * Provides standard settings for intent recognition using embeddings and LLM.
 *
 * @type {Object}
 * @property {number} similarityThreshold - Threshold for intent matching (0.88)
 * @property {TextGenerationConfig} textGenerationConfig - LLM text generation settings
 * @property {number} maxIntentsForLLM - Maximum intents to send to LLM (5)
 * @property {number} maxPhrasesPerIntent - Maximum phrases per intent (3)
 * @property {number} embeddingSimilarityThreshold - Embedding similarity threshold (0.7)
 * @property {number} topNIntents - Number of top intents to return (1)
 */
exports.DEFAULT_INTENT_SUBGRAPH_CONFIG = {
    similarityThreshold: 0.88,
    textGenerationConfig: exports.DEFAULT_TEXT_CONFIG,
    maxIntentsForLLM: 5,
    maxPhrasesPerIntent: 3,
    embeddingSimilarityThreshold: 0.7,
    topNIntents: 1,
};
/**
 * Default LLM model name for text generation.
 * Standard model used for LLM-based text generation tasks.
 *
 * @type {string}
 */
exports.DEFAULT_LLM_MODEL_NAME = 'meta-llama/Llama-3.1-70b-Instruct';
/**
 * Default retrieval configuration for knowledge nodes.
 * Provides standard settings for knowledge retrieval with reasonable thresholds.
 *
 * @property {number} threshold - Similarity threshold for retrieval (0.7)
 * @property {number} top_k - Number of top results to retrieve (5)
 */
exports.DEFAULT_RETRIEVAL_CONFIG = {
    threshold: 0.7,
    top_k: 5,
};
/**
 * Default intent matcher configuration for intent recognition.
 * Provides standard settings for intent matching with embedding and LLM-based approaches.
 *
 * @property {Object} embedding - Embedding-based matching configuration
 * @property {number} embedding.similarity_threshold - Similarity threshold for embeddings (0.88)
 * @property {Object} llm - LLM-based matching configuration
 * @property {TextGenerationConfig} llm.generation_config - Text generation config for LLM matching
 * @property {string} llm.prompt_template - Prompt template for LLM matching (empty)
 * @property {number} llm.embedding_similarity_threshold - Embedding similarity threshold for LLM (0.7)
 * @property {number} llm.max_embedding_matches_for_llm - Maximum embedding matches for LLM (5)
 * @property {number} top_n_intents - Number of top intents to return (3)
 */
exports.DEFAULT_INTENT_MATCHER_CONFIG = {
    embedding: {
        similarity_threshold: 0.88,
    },
    llm: {
        generation_config: exports.DEFAULT_TEXT_CONFIG,
        prompt_template: '',
        embedding_similarity_threshold: 0.7,
        max_embedding_matches_for_llm: 5,
    },
    top_n_intents: 3,
};
/**
 * Default speech recognition configuration for STT nodes.
 * Provides standard settings for speech recognition with reasonable defaults.
 *
 * @property {string} language_code - Language code (e.g., 'en-US')
 */
exports.DEFAULT_SPEECH_RECOGNITION_CONFIG = {
    language_code: 'en-US',
};
/**
 * Default TTS model ID for TTS nodes.
 * Standard model used for TTS synthesis.
 *
 * @type {string}
 */
exports.DEFAULT_TTS_MODEL_ID = 'inworld-tts-1-max';
/**
 * Default speech synthesis configuration for TTS nodes.
 * Provides standard settings for speech synthesis with reasonable defaults.
 *
 * @property {string} type - Type of synthesis ('inworld')
 * @property {Object} config - Configuration for speech synthesis
 * @property {Object} config.inference - Inference configuration
 * @property {number} config.inference.pitch - Pitch (0)
 * @property {number} config.inference.speaking_rate - Speaking rate (1)
 * @property {number} config.inference.temperature - Sampling temperature (0.8)
 * @property {Object} config.postprocessing - Postprocessing configuration
 * @property {number} config.postprocessing.sample_rate - Sample rate (48000)
 */
exports.DEFAULT_SPEECH_SYNTHESIS_CONFIG = {
    type: 'inworld',
    config: {
        model_id: exports.DEFAULT_TTS_MODEL_ID,
        inference: {
            pitch: 0,
            speaking_rate: 1,
            temperature: 0.8,
        },
        postprocessing: {
            sample_rate: 48000,
        },
    },
};
/**
 * Default TTS voice for TTS nodes.
 * Standard voice used for TTS synthesis.
 *
 * @type {Voice}
 */
exports.DEFAULT_TTS_VOICE = {
    speaker_id: 'Ashley',
    language_code: 'en-US',
};

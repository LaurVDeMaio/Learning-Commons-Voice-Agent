"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ComponentStore = void 0;
const expose_binary_1 = require("../expose_binary");
/**
 * Singleton class for managing the component store instance.
 * Ensures only one instance of ComponentStoreFunctions.new() is created and reused.
 * @internal
 */
class ComponentStore {
    constructor() {
        this.componentStore = expose_binary_1.ComponentStoreFunctions.new();
    }
    /**
     * Gets the singleton instance of ComponentStore.
     * Creates a new instance if one doesn't exist.
     *
     * @returns {ComponentStore} The singleton ComponentStore instance
     */
    static getInstance() {
        if (!ComponentStore.instance) {
            ComponentStore.instance = new ComponentStore();
        }
        return ComponentStore.instance;
    }
    /**
     * Gets the underlying component store instance.
     *
     * @returns The component store instance created by ComponentStoreFunctions.new()
     */
    getComponentStore() {
        return this.componentStore;
    }
    /**
     * Destroys the component store instance.
     * This should be called when the application is shutting down.
     */
    static destroy() {
        if (ComponentStore.instance) {
            if (ComponentStore.instance.componentStore) {
                expose_binary_1.ComponentStoreFunctions.clear(ComponentStore.instance.componentStore);
                expose_binary_1.ComponentStoreFunctions.delete(ComponentStore.instance.componentStore);
                ComponentStore.instance.componentStore = null;
            }
            ComponentStore.instance = null;
        }
    }
}
exports.ComponentStore = ComponentStore;
ComponentStore.instance = null;

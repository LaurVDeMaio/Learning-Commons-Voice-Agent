import { Node, NodePropsInterface } from '../node';
import { NodeExecutionConfig } from '../NodeExecutionConfig';
/**
 * Interface for Random Canned Text Node creation properties.
 */
export interface RandomCannedTextNodePropsInterface extends NodePropsInterface {
    /** Optional execution configuration for the random canned text node */
    executionConfig?: NodeExecutionConfig;
}
/**
 * @internal
 * @warning This programmatic variant of RandomCannedTextNode is not tested and not exported on top level of package.
 * The main purpose of this node, as of now, is just to support documentation generation. Later, we will either rework it or support it only in the DSL.
 */
/**
 * Node for generating random canned text in the graph.
 * Outputs random text from a predefined set of phrases.
 * @input {TextData} {@link TextData} - The data type that RandomCannedTextNode accepts as input
 * @output {TextData} {@link TextData} - The data type that RandomCannedTextNode accepts as output
 */
export declare class RandomCannedTextNode extends Node {
    private executionConfig?;
    /**
     * Creates a new RandomCannedTextNode instance.
     *
     * @param props - Random canned text node creation properties
     * @internal
     */
    constructor(props: RandomCannedTextNodePropsInterface);
    /**
     * Cleans up resources associated with this random canned text node.
     */
    destroy(): void;
}

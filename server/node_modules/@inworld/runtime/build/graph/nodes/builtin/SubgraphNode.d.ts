import { Node, NodePropsInterface } from '../node';
import { NodeExecutionConfig } from '../NodeExecutionConfig';
/**
 * Interface for Subgraph Node creation properties.
 */
export interface SubgraphNodePropsInterface extends NodePropsInterface {
    /** Optional execution configuration for the subgraph node */
    executionConfig?: NodeExecutionConfig;
}
/**
 * @internal
 * @warning This programmatic variant of SubgraphNode is not tested and not exported on top level of package.
 * The main purpose of this node, as of now, is just to support documentation generation. Later, we will either rework it or support it only in the DSL.
 */
/**
 * TODO: union type for all input and output types
 */
/**
 * Node for executing subgraphs in the graph.
 * Executes a subgraph with the given parameters.
 * @input {any} any - The data type that SubgraphNode accepts as input
 * @output {any} any - The data type that SubgraphNode accepts as output
 */
export declare class SubgraphNode extends Node {
    private executionConfig?;
    /**
     * Creates a new SubgraphNode instance.
     *
     * @param props - Subgraph node creation properties
     * @internal
     */
    constructor(props: SubgraphNodePropsInterface);
    /**
     * Cleans up resources associated with this subgraph node.
     */
    destroy(): void;
}

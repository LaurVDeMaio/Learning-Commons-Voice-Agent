import { Node, NodePropsInterface } from '../node';
import { NodeExecutionConfig } from '../NodeExecutionConfig';
/**
 * Interface for Keyword Matcher Node creation properties.
 */
export interface KeywordMatcherNodePropsInterface extends NodePropsInterface {
    /** Optional execution configuration for the keyword matcher node */
    executionConfig?: NodeExecutionConfig;
}
/**
 * @internal
 * @warning This programmatic variant of KeywordMatcherNode is not tested and not exported on top level of package.
 * The main purpose of this node, as of now, is just to support documentation generation. Later, we will either rework it or support it only in the DSL.
 */
/**
 * Node for keyword matching in the graph.
 * Processes text input to identify and match keywords.
 * @input {TextData} {@link TextData} - The data type that KeywordMatcherNode accepts as input
 * @output {MatchedKeywords} {@link MatchedKeywords} - The data type that KeywordMatcherNode accepts as output
 */
export declare class KeywordMatcherNode extends Node {
    private executionConfig?;
    /**
     * Creates a new KeywordMatcherNode instance.
     *
     * @param props - Keyword matcher node creation properties
     * @internal
     */
    constructor(props: KeywordMatcherNodePropsInterface);
    /**
     * Cleans up resources associated with this keyword matcher node.
     */
    destroy(): void;
}

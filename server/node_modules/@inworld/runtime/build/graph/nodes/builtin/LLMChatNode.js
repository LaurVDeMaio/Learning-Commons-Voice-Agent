"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LLMChatNode = void 0;
const expose_binary_1 = require("../../../expose_binary");
const node_1 = require("../node");
const NodeExecutionConfig_1 = require("../NodeExecutionConfig");
/**
 * Node for language model text generation in the graph.
 * Processes input through a language model to generate text responses.
 * @input {LLMChatRequest} {@link LLMChatRequest} - The data type that LLMChatNode accepts as input
 * @output {LLMChatResponse} {@link LLMChatResponse} - The data type that LLMChatNode accepts as output
 */
class LLMChatNode extends node_1.Node {
    /**
     * Creates a new LLMChatNode instance.
     *
     * @param props - LLM chat node creation properties
     * @internal
     */
    constructor(props) {
        const executionConfig = new NodeExecutionConfig_1.LLMChatNodeExecutionConfig(props.executionConfig);
        const statusOrChatNode = expose_binary_1.NodeCreateFunctions.createLLMChatNode(props.id, executionConfig.getExternal());
        if (!expose_binary_1.StatusOrSharedPtrLLMChatNodeFunctions.isOK(statusOrChatNode)) {
            throw new Error('Failed to create LLM chat node');
        }
        const llmChatNode = expose_binary_1.StatusOrSharedPtrLLMChatNodeFunctions.getValue(statusOrChatNode);
        try {
            super(props.id, llmChatNode);
            this.stream = props.executionConfig.stream;
            this.executionConfig = executionConfig;
        }
        catch (e) {
            executionConfig === null || executionConfig === void 0 ? void 0 : executionConfig.destroy();
            throw e;
        }
    }
    /**
     * Cleans up resources associated with this LLM node.
     */
    destroy() {
        var _a;
        (_a = this.executionConfig) === null || _a === void 0 ? void 0 : _a.destroy();
        this.executionConfig = null;
        if (this.external) {
            expose_binary_1.StatusOrSharedPtrLLMChatNodeFunctions.delete(this.external);
            this.external = null;
        }
        super.destroy();
    }
}
exports.LLMChatNode = LLMChatNode;

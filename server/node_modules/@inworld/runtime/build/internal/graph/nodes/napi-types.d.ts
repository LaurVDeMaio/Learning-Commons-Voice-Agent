/**
 * TODO: write class wrapper for external nodejs api
 * TypeScript interface for JsProcessContext based on C++ bindings.
 * Provides access to execution context information for custom nodes.
 *
 * Based on inworld-framework-cpp bindings:
 * - inworld_ProcessContext_GetVariant
 * - inworld_ProcessContext_GetConfig
 * - inworld_ProcessContext_IsCancelled
 */
export interface JsProcessContext {
    /**
     * Gets the execution ID from the context.
     * @returns The execution ID
     */
    getExecutionId(): string;
    /**
     * Gets the variant string from the context.
     * @returns The variant string
     */
    getVariant(): string;
    /**
     * Gets the configuration object from the context.
     * @returns The configuration object
     */
    getConfig(): any;
    /**
     * Checks if the execution has been cancelled.
     * @returns True if cancelled, false otherwise
     */
    isCancelled(): boolean;
    /**
     * Gets the external pointer from the context.
     * @returns The external pointer
     */
    asExternal(): any;
}

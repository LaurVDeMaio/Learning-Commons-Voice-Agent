import { ExternalReference } from '../../common/data_types/common';
import { CompiledIntent } from './compiled_intent';
import { IntentInterface } from './intent';
/**
 * Class for compiling intents into an optimized form for matching.
 * Provides functionality to transform raw intents into compiled intents
 * that include embeddings and normalized text.
 * @internal
 */
export declare class IntentCompiler {
    private compiler;
    private intents;
    /**
     * Creates a new IntentCompiler instance.
     *
     * @param compiler - External reference to the native intent compiler implementation
     * @internal
     */
    constructor(compiler: ExternalReference);
    /**
     * Compiles a list of intents into their optimized form for intent matching.
     * The compiled intents include embeddings and normalized phrases for more effective matching.
     *
     * @param intents - Array of intents to compile
     * @returns Promise resolving to an array of compiled intents
     * @throws InworldError if compilation fails
     */
    compileIntents(intents: IntentInterface[]): Promise<CompiledIntent[]>;
    /**
     * Returns the external reference to the native compiler implementation.
     *
     * @returns External reference object
     * @internal
     */
    getExternal(): any;
    /**
     * Cleans up resources associated with this intent compiler.
     */
    destroy(): void;
}

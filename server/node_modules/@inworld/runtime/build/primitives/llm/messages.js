"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Content = exports.Tools = exports.ToolCalls = exports.ToolCall = exports.Tool = void 0;
// Re-export everything from the common messages module
var messages_1 = require("../../common/vector/messages");
Object.defineProperty(exports, "Tool", { enumerable: true, get: function () { return messages_1.Tool; } });
Object.defineProperty(exports, "ToolCall", { enumerable: true, get: function () { return messages_1.ToolCall; } });
Object.defineProperty(exports, "ToolCalls", { enumerable: true, get: function () { return messages_1.ToolCalls; } });
Object.defineProperty(exports, "Tools", { enumerable: true, get: function () { return messages_1.Tools; } });
const messages_2 = require("../../common/vector/messages");
const expose_binary_1 = require("../../expose_binary");
/**
 * Class for managing content with tool calls.
 * @internal
 */
class Content {
    constructor(contentInterface) {
        this.content = expose_binary_1.ContentFunctions.new();
        if (contentInterface) {
            expose_binary_1.ContentFunctions.setContent(this.content, contentInterface.content);
            if (contentInterface.toolCalls && contentInterface.toolCalls.length > 0) {
                const toolCalls = new messages_2.ToolCalls(contentInterface.toolCalls);
                expose_binary_1.ContentFunctions.setToolCalls(this.content, toolCalls.getExternal());
                toolCalls.destroy();
            }
        }
    }
    getExternal() {
        return this.content;
    }
    destroy() {
        if (this.content) {
            expose_binary_1.ContentFunctions.delete(this.content);
            this.content = null;
        }
    }
}
exports.Content = Content;

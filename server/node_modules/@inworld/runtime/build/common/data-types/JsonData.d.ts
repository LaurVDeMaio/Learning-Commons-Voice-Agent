import { ExternalReference } from './/common';
import { BaseData } from './BaseData';
/**
 * JSON data for graph processing.
 *
 * Handles JSON objects and strings with validation and parsing capabilities.
 */
export declare class JsonData extends BaseData {
    /**
     * @internal
     * Creates a new JsonData instance.
     *
     * @param {any} [data={}] - JavaScript object or JSON string (defaults to empty object)
     */
    constructor(data?: any);
    /**
     * Retrieves the JSON data as a JavaScript object.
     *
     * @returns {any} Parsed JavaScript object
     */
    getData(): any;
    /**
     * Retrieves the JSON data as a string.
     *
     * @returns {string} JSON string
     */
    getJsonString(): string;
    /**
     * Retrieves the value as a string (for primitive JSON values).
     *
     * @returns {string} String representation of the JSON value
     */
    getValueAsString(): string;
    /**
     * Checks if the JSON data is valid.
     *
     * @returns {boolean} True if valid, false otherwise
     */
    isValid(): boolean;
    /**
     * @internal
     * Creates a JsonData instance from an external reference.
     *
     * @param {ExternalReference} external - External reference to JSON data
     * @returns {JsonData} New JsonData instance wrapping the external reference
     */
    static fromExternal(external: ExternalReference): any;
    /**
     * Cleans up resources associated with this JSON data.
     */
    destroy(): void;
}

import { ExternalReference, TTSOutputStreamIterator } from '../common';
/**
 * Class for handling string-based streams.
 * Provides functionality to read text data from native stream implementations.
 * @internal
 */
export declare class TTSOutputStream implements TTSOutputStreamIterator {
    private stream;
    /**
     * Creates a new TTSOutputStream instance.
     *
     * @param stream - External reference to the native stream implementation
     */
    constructor(stream: ExternalReference);
    /**
     * Asynchronously reads the next item from the stream.
     *
     * @returns Promise resolving to a result object with text content or done flag
     * @throws InworldError if reading from the stream fails
     */
    next(): Promise<{
        audio: import("../common").AudioChunkInterface;
        text: any;
        done: boolean;
    } | {
        done: boolean;
        audio?: undefined;
        text?: undefined;
    }>;
    getStream(): any;
    /**
     * Creates a new TTSOutputStream instance from an external reference.
     *
     * @param stream - External reference to the native stream implementation
     * @returns A new TTSOutputStream instance
     * @internal
     */
    static fromExternal(stream: ExternalReference): TTSOutputStream;
}

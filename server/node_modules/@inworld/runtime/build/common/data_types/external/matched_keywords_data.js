"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MatchedKeywordsData = void 0;
const expose_binary_1 = require("../../../expose_binary");
const keyword_match_1 = require("../../vector/keyword_match");
const base_data_1 = require("./base_data");
/**
 * Collection of keyword matches.
 *
 * Contains an array of keyword match results from keyword detection operations.
 */
class MatchedKeywordsData extends base_data_1.BaseData {
    /**
     * Constructs a new MatchedKeywords instance.
     *
     * @param {ExternalReference} external - The external reference to create the instance from
     */
    constructor(external) {
        super(external);
    }
    /**
     * @internal
     * Creates a new MatchedKeywords instance from an external reference.
     *
     * @param {ExternalReference} external - The external reference to create the instance from
     * @returns {MatchedKeywordsData} A new MatchedKeywords instance
     */
    static fromExternal(external) {
        return new MatchedKeywordsData(external);
    }
    /**
     * Retrieves the matches.
     *
     * @returns {any[] | undefined} An array of keyword matches, or undefined if no matches are found
     */
    getMatchers() {
        const matches = expose_binary_1.MatchedKeywordsFunctions.toMatchedKeywords(this.external);
        const isValid = expose_binary_1.MatchedKeywordsFunctions.isValid(matches);
        if (!isValid) {
            return;
        }
        return keyword_match_1.VectorKeywordMatch.toArray(expose_binary_1.MatchedKeywordsFunctions.getMatches(matches));
    }
}
exports.MatchedKeywordsData = MatchedKeywordsData;

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MemoryStateData = void 0;
const expose_binary_1 = require("../../../expose_binary");
const base_data_1 = require("./base_data");
/**
 * Memory state for conversation systems.
 *
 * Contains memory snapshot data as JSON string for conversation context.
 */
class MemoryStateData extends base_data_1.BaseData {
    /**
     * @internal
     * Constructs a new MemoryState instance.
     *
     * @param {ExternalReference} external - The external reference to create the instance from
     */
    constructor(external) {
        super(external);
    }
    /**
     * @internal
     * Creates a new MemoryState instance from an external reference.
     *
     * @param {ExternalReference} external - The external reference to create the instance from
     * @returns {MemoryStateData} A new MemoryState instance
     */
    static fromExternal(external) {
        return new MemoryStateData(external);
    }
    /**
     * Retrieves the memory state.
     *
     * @returns {string | undefined} The memory state, or undefined if no memory state is found
     */
    getState() {
        const memoryState = expose_binary_1.MemoryStateFunctions.toMemoryState(this.external);
        const isValid = expose_binary_1.MemoryStateFunctions.isValid(memoryState);
        if (!isValid) {
            return;
        }
        return expose_binary_1.MemoryStateFunctions.toString(memoryState);
    }
}
exports.MemoryStateData = MemoryStateData;

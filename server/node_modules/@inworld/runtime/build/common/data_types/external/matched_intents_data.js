"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MatchedIntentsData = void 0;
const expose_binary_1 = require("../../../expose_binary");
const intent_match_1 = require("../../vector/intent_match");
const base_data_1 = require("./base_data");
/**
 * Collection of intent matches.
 *
 * Contains an array of intent match results from intent recognition operations.
 */
class MatchedIntentsData extends base_data_1.BaseData {
    /**
     * @internal
     * Constructs a new MatchedIntents instance.
     *
     * @param {ExternalReference} external - The external reference to create the instance from
     */
    constructor(external) {
        super(external);
    }
    /**
     * @internal
     * Creates a new MatchedIntents instance from an external reference.
     *
     * @param {ExternalReference} external - The external reference to create the instance from
     * @returns {MatchedIntentsData} A new MatchedIntents instance
     */
    static fromExternal(external) {
        return new MatchedIntentsData(external);
    }
    /**
     * Retrieves the matches.
     *
     * @returns {any[] | undefined} An array of intent matches, or undefined if no matches are found
     */
    getMatchers() {
        const matches = expose_binary_1.MatchedIntentsFunctions.toMatchedIntents(this.external);
        const isValid = expose_binary_1.MatchedIntentsFunctions.isValid(matches);
        if (!isValid) {
            return;
        }
        return intent_match_1.VectorIntentMatch.toArray(expose_binary_1.MatchedIntentsFunctions.getMatches(matches));
    }
}
exports.MatchedIntentsData = MatchedIntentsData;

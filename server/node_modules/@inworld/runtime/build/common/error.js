"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InworldError = void 0;
/**
 * Custom error class for Inworld-specific errors.
 * Provides context information along with the error message.
 */
class InworldError extends Error {
    /**
     * Creates a new InworldError instance.
     *
     * @param message - Error message
     * @param context - Additional context information about the error
     */
    constructor(message, context) {
        // If context includes a status, append it to the message
        if (context && typeof context === 'string') {
            super(`${message}${context}`);
        }
        else {
            super(message);
        }
        this.context = context;
        // Ensure the name is set properly for error reporting
        this.name = this.constructor.name;
        // Maintain proper prototype chain for instanceof checks
        Object.setPrototypeOf(this, new.target.prototype);
    }
    /**
     * Returns a string representation of the error, including context when available.
     *
     * @returns Formatted error message with context
     */
    toString() {
        if (this.context && typeof this.context === 'string') {
            return `${this.message}`;
        }
        else if (this.context && typeof this.context === 'object') {
            try {
                return `${this.message}${this.context.status ? `: ${this.context.status}` : ''}`;
            }
            catch (_e) {
                return this.message;
            }
        }
        return this.message;
    }
}
exports.InworldError = InworldError;

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TextInBracketsRemover = void 0;
const expose_binary_1 = require("../../expose_binary");
const stream_text_processor_1 = require("./stream_text_processor");
/**
 * Text processor that removes text enclosed in brackets from text streams.
 * Extends the StreamTextProcessor with bracket content removal functionality.
 */
class TextInBracketsRemover extends stream_text_processor_1.StreamTextProcessor {
    /**
     * Creates a new TextInBracketsRemover instance asynchronously.
     *
     * @param {ExternalReference} textStream - External reference to the text stream
     * @returns {Promise<TextInBracketsRemover>} Promise resolving to a new TextInBracketsRemover instance
     * @throws InworldError if creation fails
     */
    static async create(textStream) {
        return stream_text_processor_1.StreamTextProcessor.createInstance(TextInBracketsRemover, expose_binary_1.TextInBracketsRemoverFunctions, expose_binary_1.StatusOrTextInBracketsRemoverFunctions, textStream);
    }
}
exports.TextInBracketsRemover = TextInBracketsRemover;

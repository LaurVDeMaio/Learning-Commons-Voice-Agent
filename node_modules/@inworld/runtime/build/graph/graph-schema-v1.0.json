{
    "$schema": "http://json-schema.org/draft/2020-12/schema#",
    "$id": "https://inworld.ai/schemas/basic-config.json",
    "title": "Inworld Basic Configuration Schema",
    "description": "Schema for validating Inworld graph JSON configuration. Checks the basic structure of the configuration.",
    "type": "object",
    "required": ["schema_version", "main"],
    "properties": {
        "schema_version": {
            "type": "string",
            "description": "Version of the configuration schema",
            "const": "1.0.0"
        },
        "components": {
            "type": "array",
            "description": "List of components that can be used by graph nodes",
            "items": {
                "$ref": "#/$defs/Component"
            }
        },
        "subgraphs": {
            "type": "array",
            "description": "List of subgraphs that can be referenced by SubgraphNode nodes",
            "items": {
                "$ref": "#/$defs/Subgraph"
            }
        },
        "main": {
            "$ref": "#/$defs/MainGraph",
            "description": "Main graph that serves as the entry point"
        }
    },
    "additionalProperties": false,
    "$defs": {
        "TemplateString": {
            "type": "string",
            "pattern": "^\\{\\{[^}]+\\}\\}$",
            "description": "Template string in the format {{parameter_name}}"
        },
        "Subgraph": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the graph"
                },
                "parameters": {
                    "type": "array",
                    "description": "List of parameters that can be passed to this graph with their types",
                    "items": {
                        "type": "object",
                        "required": ["name", "type"],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the parameter"
                            },
                            "type": {
                                "type": "string",
                                "enum": ["string", "number", "integer", "boolean"],
                                "description": "Type of the parameter"
                            }
                        },
                        "additionalProperties": false
                    }
                },
                "nodes": {
                    "type": "array",
                    "description": "List of nodes that make up the graph",
                    "items": {
                        "$ref": "#/$defs/Node"
                    },
                    "minItems": 1
                },
                "edges": {
                    "type": "array",
                    "description": "List of edges that connect nodes",
                    "items": {
                        "$ref": "#/$defs/Edge"
                    }
                },
                "start_nodes": {
                    "type": "array",
                    "description": "List of node IDs that serve as entry points of the graph",
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1,
                    "maxItems": 1
                },
                "end_nodes": {
                    "type": "array",
                    "description": "List of node IDs that serve as exit points of the graph",
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1,
                    "maxItems": 1
                }
            },
            "additionalProperties": false
        },
        "MainGraph": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the main graph"
                },
                "nodes": {
                    "type": "array",
                    "description": "List of nodes that make up the main graph",
                    "items": {
                        "$ref": "#/$defs/Node"
                    }
                },
                "edges": {
                    "type": "array",
                    "description": "List of edges that connect nodes",
                    "items": {
                        "$ref": "#/$defs/Edge"
                    }
                },
                "start_nodes": {
                    "type": "array",
                    "description": "List of node IDs that serve as entry points of the graph",
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1
                },
                "end_nodes": {
                    "type": "array",
                    "description": "List of node IDs that serve as exit points of the graph",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "additionalProperties": false
        },
        "Component": {
            "type": "object",
            "required": ["id", "type"],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the component"
                },
                "type": {
                    "description": "Type of the component",
                    "anyOf": [
                        {
                            "type": "string",
                            "enum": [
                                "TextEmbedderInterface",
                                "LLMInterface",
                                "LLMRouting",
                                "AECFilterInterface",
                                "StreamingSTTInterface",
                                "STTInterface",
                                "TTSInterface",
                                "VADInterface",
                                "KnowledgeInterface",
                                "NERFactory",
                                "TextClassifierFactory",
                                "MCPClientInterface"
                            ]
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "creation_config": {
                    "$ref": "#/$defs/ComponentCreationConfig"
                }
            },
            "additionalProperties": false
        },
        "ComponentCreationConfig": {
            "type": "object",
            "required": ["type", "properties"],
            "properties": {
                "type": {
                    "description": "Type of creation configuration",
                    "anyOf": [
                        {
                            "type": "string",
                            "enum": [
                                "LocalTextEmbedderConfig",
                                "RemoteTextEmbedderConfig",
                                "LocalLLMConfig",
                                "RemoteLLMConfig",
                                "LLMRoutingCreationConfig",
                                "LocalAECFilterConfig",
                                "LocalStreamingSTTConfig",
                                "RemoteStreamingSTTConfig",
                                "LocalSTTConfig",
                                "RemoteSTTConfig",
                                "RemoteTTSConfig",
                                "LocalVADConfig",
                                "LocalKnowledgeConfig",
                                "RemoteKnowledgeConfig",
                                "NERCreationConfig",
                                "TextClassifierCreationConfig",
                                "MCPClientCreationConfig"
                            ]
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "properties": {
                    "type": "object",
                    "description": "Configuration object specific to the creation type"
                }
            },
            "additionalProperties": false,
            "allOf": [
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "LocalTextEmbedderConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/LocalTextEmbedderConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "RemoteTextEmbedderConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/RemoteTextEmbedderConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "LocalLLMConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/LocalLLMConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "RemoteLLMConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/RemoteLLMConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "LLMRoutingCreationConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/LLMRoutingCreationConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "LocalAECFilterConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/LocalAECFilterConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "LocalStreamingSTTConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/LocalStreamingSTTConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "RemoteStreamingSTTConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/RemoteStreamingSTTConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "LocalSTTConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/LocalSTTConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "RemoteSTTConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/RemoteSTTConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "RemoteTTSConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/RemoteTTSConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "LocalVADConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/LocalVADConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "LocalKnowledgeConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/LocalKnowledgeConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "RemoteKnowledgeConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/RemoteKnowledgeConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "NERCreationConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/NERCreationConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "TextClassifierCreationConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/TextClassifierCreationConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "MCPClientCreationConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/MCPClientCreationConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "not": {
                            "properties": {
                                "type": {
                                    "enum": [
                                        "LocalTextEmbedderConfig",
                                        "RemoteTextEmbedderConfig",
                                        "LocalLLMConfig",
                                        "RemoteLLMConfig",
                                        "LLMRoutingCreationConfig",
                                        "LocalAECFilterConfig",
                                        "LocalStreamingSTTConfig",
                                        "RemoteStreamingSTTConfig",
                                        "LocalSTTConfig",
                                        "RemoteSTTConfig",
                                        "RemoteTTSConfig",
                                        "LocalVADConfig",
                                        "LocalKnowledgeConfig",
                                        "RemoteKnowledgeConfig",
                                        "NERCreationConfig",
                                        "TextClassifierCreationConfig",
                                        "MCPClientCreationConfig"
                                    ]
                                }
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                }
            ]
        },
        "Node": {
            "oneOf": [
                {
                    "$ref": "#/$defs/RegularNode"
                },
                {
                    "$ref": "#/$defs/SubgraphNode"
                }
            ]
        },
        "RegularNode": {
            "type": "object",
            "required": ["id", "type"],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the node"
                },
                "type": {
                    "description": "Type of the node",
                    "type": "string"
                },
                "creation_config": {
                    "$ref": "#/$defs/NodeCreationConfig"
                },
                "execution_config": {
                    "$ref": "#/$defs/NodeExecutionConfig"
                }
            },
            "additionalProperties": false
        },
        "SubgraphNode": {
            "type": "object",
            "required": ["id", "type", "subgraph_id"],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the node"
                },
                "type": {
                    "description": "Type of the node",
                    "const": "SubgraphNode"
                },
                "subgraph_id": {
                    "type": "string",
                    "description": "ID of the graph to reference"
                },
                "parameters": {
                    "type": "object",
                    "description": "Parameter values to pass to a subgraph",
                    "additionalProperties": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            },
                            {
                                "type": "boolean"
                            }
                        ]
                    }
                }
            },
            "additionalProperties": false
        },
        "NodeCreationConfig": {
            "type": "object",
            "required": ["type", "properties"],
            "properties": {
                "type": {
                    "description": "Type of node creation configuration",
                    "anyOf": [
                        {
                            "type": "string",
                            "enum": [
                                "KnowledgeNodeCreationConfig",
                                "TextClassifierNodeCreationConfig",
                                "IntentNodeCreationConfig",
                                "GoalAdvancementNodeCreationConfig",
                                "KeywordMatcherNodeCreationConfig"
                            ]
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "properties": {
                    "type": "object",
                    "description": "Node-specific creation configuration",
                    "additionalProperties": true
                }
            },
            "additionalProperties": false,
            "allOf": [
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "KnowledgeNodeCreationConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/KnowledgeNodeCreationConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "TextClassifierNodeCreationConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/TextClassifierNodeCreationConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "IntentNodeCreationConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/IntentNodeCreationConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "GoalAdvancementNodeCreationConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/GoalAdvancementNodeCreationConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "KeywordMatcherNodeCreationConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/KeywordMatcherNodeCreationConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "not": {
                            "properties": {
                                "type": {
                                    "enum": [
                                        "KnowledgeNodeCreationConfig",
                                        "TextClassifierNodeCreationConfig",
                                        "IntentNodeCreationConfig",
                                        "GoalAdvancementNodeCreationConfig",
                                        "KeywordMatcherNodeCreationConfig"
                                    ]
                                }
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                }
            ]
        },
        "NodeExecutionConfig": {
            "type": "object",
            "required": ["type", "properties"],
            "properties": {
                "type": {
                    "description": "Type of node execution configuration",
                    "anyOf": [
                        {
                            "type": "string",
                            "enum": [
                                "NodeExecutionConfig",
                                "GoalAdvancementNodeExecutionConfig",
                                "IntentNodeExecutionConfig",
                                "KnowledgeNodeExecutionConfig",
                                "LLMChatNodeExecutionConfig",
                                "LLMChatRequestBuilderNodeExecutionConfig",
                                "LLMCompletionNodeExecutionConfig",
                                "LLMPromptBuilderNodeExecutionConfig",
                                "MemoryRetrieveNodeExecutionConfig",
                                "RandomCannedTextNodeExecutionConfig",
                                "STTNodeExecutionConfig",
                                "TextClassifierNodeExecutionConfig",
                                "TTSNodeExecutionConfig",
                                "SafetyCheckerNodeExecutionConfig",
                                "IntentEmbedderMatchNodeExecutionConfig",
                                "MemoryUpdateNodeCreationConfig",
                                "MCPListToolsNodeExecutionConfig",
                                "MCPCallToolNodeExecutionConfig",
                                "KeywordMatcherNodeCreationConfig",
                                "IntentLLMPromptVariablesBuilderNodeExecutionConfig",
                                "IntentTopNFilterNodeExecutionConfig",
                                "MemoryRetrieveNodeExecutionConfig"
                            ]
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "properties": {
                    "type": "object",
                    "description": "Node-specific execution configuration"
                }
            },
            "additionalProperties": false,
            "allOf": [
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "GoalAdvancementNodeExecutionConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/GoalAdvancementNodeExecutionConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "IntentNodeExecutionConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/IntentNodeExecutionConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "KnowledgeNodeExecutionConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/KnowledgeNodeExecutionConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "LLMChatNodeExecutionConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/LLMChatNodeExecutionConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "LLMChatRequestBuilderNodeExecutionConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/LLMChatRequestBuilderNodeExecutionConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "LLMCompletionNodeExecutionConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/LLMCompletionNodeExecutionConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "LLMPromptBuilderNodeExecutionConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/LLMPromptBuilderNodeExecutionConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "RandomCannedTextNodeExecutionConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/RandomCannedTextNodeExecutionConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "STTNodeExecutionConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/STTNodeExecutionConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "TextClassifierNodeExecutionConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/TextClassifierNodeExecutionConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "TTSNodeExecutionConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/TTSNodeExecutionConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "NodeExecutionConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/BaseNodeExecutionConfig"
                            },
                            "additionalProperties": false
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "SafetyCheckerNodeExecutionConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/SafetyCheckerNodeExecutionConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "IntentEmbedderMatchNodeExecutionConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/IntentEmbedderMatchNodeExecutionConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "MemoryUpdateNodeCreationConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/MemoryUpdateNodeCreationConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "MCPListToolsNodeExecutionConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/MCPListToolsNodeExecutionConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "MCPCallToolNodeExecutionConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/MCPCallToolNodeExecutionConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "IntentLLMPromptVariablesBuilderNodeExecutionConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/IntentLLMPromptVariablesBuilderNodeExecutionConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "IntentTopNFilterNodeExecutionConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/IntentTopNFilterNodeExecutionConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "MemoryRetrieveNodeExecutionConfig"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "$ref": "#/$defs/MemoryRetrieveNodeExecutionConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "not": {
                            "properties": {
                                "type": {
                                    "enum": [
                                        "NodeExecutionConfig",
                                        "GoalAdvancementNodeExecutionConfig",
                                        "IntentNodeExecutionConfig",
                                        "KnowledgeNodeExecutionConfig",
                                        "LLMChatNodeExecutionConfig",
                                        "LLMChatRequestBuilderNodeExecutionConfig",
                                        "LLMCompletionNodeExecutionConfig",
                                        "LLMPromptBuilderNodeExecutionConfig",
                                        "RandomCannedTextNodeExecutionConfig",
                                        "STTNodeExecutionConfig",
                                        "TextClassifierNodeExecutionConfig",
                                        "TTSNodeExecutionConfig",
                                        "SafetyCheckerNodeExecutionConfig",
                                        "IntentEmbedderMatchNodeExecutionConfig",
                                        "MemoryUpdateNodeCreationConfig",
                                        "MCPListToolsNodeExecutionConfig",
                                        "MCPCallToolNodeExecutionConfig",
                                        "IntentLLMPromptVariablesBuilderNodeExecutionConfig",
                                        "IntentTopNFilterNodeExecutionConfig",
                                        "MemoryRetrieveNodeExecutionConfig"
                                    ]
                                }
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "properties": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                }
            ]
        },
        "Edge": {
            "type": "object",
            "required": ["from_node", "to_node"],
            "properties": {
                "from_node": {
                    "type": "string",
                    "description": "ID of the source node"
                },
                "to_node": {
                    "type": "string",
                    "description": "ID of the destination node"
                },
                "condition_expression": {
                    "type": "string",
                    "description": "CEL template expression for edge condition"
                },
                "condition_id": {
                    "type": "string",
                    "description": "ID of a component that implements EdgeCondition"
                },
                "optional": {
                    "anyOf": [
                        {
                            "type": "boolean",
                            "default": false
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Whether this edge is optional"
                },
                "loop": {
                    "anyOf": [
                        {
                            "type": "boolean",
                            "default": false
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Whether this edge creates a loop"
                }
            },
            "additionalProperties": false,
            "not": {
                "allOf": [
                    {
                        "required": ["condition_expression"]
                    },
                    {
                        "required": ["condition_id"]
                    }
                ]
            }
        },
        "Device": {
            "type": "object",
            "description": "Device abstraction for hardware resources",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": ["CPU", "CUDA", "Metal", "ROCm"],
                    "description": "Type of the device"
                }
            },
            "additionalProperties": true
        },
        "TextGenerationConfig": {
            "type": "object",
            "description": "Configuration for text generation",
            "properties": {
                "max_new_tokens": {
                    "anyOf": [
                        {
                            "type": "integer",
                            "minimum": 1
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Maximum number of tokens to generate"
                },
                "max_prompt_length": {
                    "anyOf": [
                        {
                            "type": "integer",
                            "minimum": 1
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Maximum length of the prompt in tokens"
                },
                "temperature": {
                    "anyOf": [
                        {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Controls randomness of generated text"
                },
                "top_p": {
                    "anyOf": [
                        {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Probability for most probable tokens sampling"
                },
                "repetition_penalty": {
                    "anyOf": [
                        {
                            "type": "number",
                            "minimum": -2.0,
                            "maximum": 2.0
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Repetition penalty"
                },
                "frequency_penalty": {
                    "anyOf": [
                        {
                            "type": "number",
                            "minimum": -2.0,
                            "maximum": 2.0
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Frequency penalty"
                },
                "presence_penalty": {
                    "anyOf": [
                        {
                            "type": "number",
                            "minimum": -2.0,
                            "maximum": 2.0
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Presence penalty"
                },
                "stop_sequences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of sequences to stop generation"
                },
                "seed": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Random seed for controlling the randomness of text generation"
                },
                "logit_bias": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "token_id": {
                                "type": "string",
                                "description": "ID of the token"
                            },
                            "bias_value": {
                                "anyOf": [
                                    {
                                        "type": "integer",
                                        "minimum": -100,
                                        "maximum": 100
                                    },
                                    {
                                        "$ref": "#/$defs/TemplateString"
                                    }
                                ],
                                "description": "Bias value from -100 to 100"
                            }
                        },
                        "required": ["token_id", "bias_value"],
                        "additionalProperties": false
                    },
                    "description": "Logit bias to modify token likelihood"
                }
            },
            "additionalProperties": false
        },
        "SpeechRecognitionConfig": {
            "type": "object",
            "description": "Configuration for speech recognition",
            "properties": {
                "language_code": {
                    "type": "string",
                    "description": "Language code for speech recognition, e.g., en, en-US, es-MX"
                }
            },
            "additionalProperties": false
        },
        "StreamSpeechRecognitionConfig": {
            "type": "object",
            "description": "Configuration for streaming speech recognition",
            "properties": {
                "speech_config": {
                    "$ref": "#/$defs/SpeechRecognitionConfig",
                    "description": "Configuration for speech recognition"
                },
                "silence_threshold_ms": {
                    "anyOf": [
                        {
                            "type": "integer",
                            "minimum": 0,
                            "default": 1500
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Threshold for silence in milliseconds"
                }
            },
            "additionalProperties": false
        },
        "AcousticEchoCancellationConfig": {
            "type": "object",
            "description": "Configuration for acoustic echo cancellation, currently empty",
            "additionalProperties": false
        },
        "VoiceActivityDetectionConfig": {
            "type": "object",
            "description": "Configuration for voice activity detection",
            "properties": {
                "speech_threshold": {
                    "anyOf": [
                        {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1,
                            "default": 0.4
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Sensitivity threshold for detecting speech"
                }
            },
            "additionalProperties": false
        },
        "ParsingConfig": {
            "type": "object",
            "description": "Configuration for parsing documents into chunks",
            "required": ["max_chars_per_chunk", "max_chunks_per_document"],
            "properties": {
                "max_chars_per_chunk": {
                    "anyOf": [
                        {
                            "type": "integer",
                            "minimum": 1
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Maximum number of characters per chunk"
                },
                "max_chunks_per_document": {
                    "anyOf": [
                        {
                            "type": "integer",
                            "minimum": 1
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Maximum number of chunks per document"
                }
            },
            "additionalProperties": false
        },
        "KnowledgeCompileConfig": {
            "type": "object",
            "description": "Configuration for compiling knowledge",
            "required": ["parsing_config"],
            "properties": {
                "parsing_config": {
                    "$ref": "#/$defs/ParsingConfig",
                    "description": "Configuration for parsing documents"
                }
            },
            "additionalProperties": false
        },
        "DictionaryRule": {
            "type": "object",
            "description": "Rule for named entity recognition",
            "required": ["name", "display_name"],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Unique identifier of the rule"
                },
                "display_name": {
                    "type": "string",
                    "description": "Human-readable name of the rule"
                },
                "synonyms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of synonyms for the rule"
                }
            },
            "additionalProperties": false
        },
        "Entity": {
            "type": "object",
            "description": "Entity definition for named entity recognition",
            "required": ["name", "rules"],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Unique identifier of the entity"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/DictionaryRule"
                    },
                    "description": "List of rules for the entity"
                }
            },
            "additionalProperties": false
        },
        "EmbeddingMatcherConfig": {
            "type": "object",
            "description": "Configuration for embedding-based intent matching",
            "required": ["similarity_threshold"],
            "properties": {
                "similarity_threshold": {
                    "anyOf": [
                        {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Threshold for similarity matching"
                }
            },
            "additionalProperties": false
        },
        "LlmMatcherConfig": {
            "type": "object",
            "description": "Configuration for LLM-based intent matching",
            "required": ["generation_config", "prompt_template"],
            "properties": {
                "generation_config": {
                    "$ref": "#/$defs/TextGenerationConfig",
                    "description": "Configuration for LLM generation"
                },
                "prompt_template": {
                    "type": "string",
                    "description": "Template for generating prompts"
                },
                "embedding_similarity_threshold": {
                    "anyOf": [
                        {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Minimum similarity threshold for phrases to include in LLM prompt"
                },
                "max_embedding_matches_for_llm": {
                    "anyOf": [
                        {
                            "type": "integer",
                            "minimum": 1
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Maximum number of embedding matches to include in LLM prompt"
                }
            },
            "additionalProperties": false
        },
        "IntentMatcherConfig": {
            "type": "object",
            "description": "Configuration for intent matching",
            "properties": {
                "embedding": {
                    "$ref": "#/$defs/EmbeddingMatcherConfig",
                    "description": "Configuration for embedding-based matching"
                },
                "llm": {
                    "$ref": "#/$defs/LlmMatcherConfig",
                    "description": "Configuration for LLM-based matching"
                },
                "top_n_intents": {
                    "anyOf": [
                        {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Number of top-scoring intents to return"
                }
            },
            "additionalProperties": false
        },
        "LocalTextEmbedderConfig": {
            "type": "object",
            "description": "Configuration for local text embedder",
            "required": ["model_path", "device"],
            "properties": {
                "model_path": {
                    "type": "string",
                    "description": "Path to the model weights file"
                },
                "device": {
                    "$ref": "#/$defs/Device",
                    "description": "Device for model placement"
                }
            },
            "additionalProperties": false
        },
        "RemoteTextEmbedderConfig": {
            "type": "object",
            "description": "Configuration for remote text embedder",
            "required": ["provider", "model_name", "api_key"],
            "properties": {
                "provider": {
                    "type": "string",
                    "description": "Provider of the remote embedder"
                },
                "model_name": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Name of the model to use"
                },
                "api_key": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "API key for authentication"
                }
            },
            "additionalProperties": false
        },
        "LocalLLMConfig": {
            "type": "object",
            "description": "Configuration for local LLM",
            "required": ["model_path", "device", "default_config"],
            "properties": {
                "model_path": {
                    "type": "string",
                    "description": "Path to the model weights file"
                },
                "device": {
                    "$ref": "#/$defs/Device",
                    "description": "Device for model placement"
                },
                "default_config": {
                    "$ref": "#/$defs/TextGenerationConfig",
                    "description": "Default text generation configuration"
                }
            },
            "additionalProperties": false
        },
        "RemoteLLMConfig": {
            "type": "object",
            "description": "Configuration for remote LLM",
            "required": ["provider", "model_name", "api_key", "default_config"],
            "properties": {
                "provider": {
                    "type": "string",
                    "description": "Provider of the remote LLM"
                },
                "model_name": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Name of the model to use"
                },
                "api_key": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "API key for authentication"
                },
                "default_config": {
                    "$ref": "#/$defs/TextGenerationConfig",
                    "description": "Default text generation configuration"
                }
            },
            "additionalProperties": false
        },
        "LLMRoutingConfig": {
            "type": "object",
            "description": "Configuration for individual LLM routing entry",
            "required": [
                "llm_component_id",
                "priority",
                "error_cooldown_seconds",
                "min_errors"
            ],
            "properties": {
                "llm_component_id": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "ID of the LLM component to retrieve from ComponentRegistry"
                },
                "priority": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Priority level for this LLM instance. Higher values indicate higher priority"
                },
                "error_cooldown_seconds": {
                    "anyOf": [
                        {
                            "type": "number",
                            "minimum": 0
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Duration in seconds to wait before retrying an LLM that has experienced errors"
                },
                "min_errors": {
                    "anyOf": [
                        {
                            "type": "integer",
                            "minimum": 1
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Minimum number of consecutive errors required before an LLM is temporarily excluded"
                }
            },
            "additionalProperties": false
        },
        "LLMRoutingCreationConfig": {
            "type": "object",
            "description": "Configuration for creating LLM routing system with multiple LLM instances",
            "required": ["routing_configs"],
            "properties": {
                "routing_configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/LLMRoutingConfig"
                    },
                    "description": "List of LLM routing configurations",
                    "minItems": 1
                }
            },
            "additionalProperties": false
        },
        "LocalAECFilterConfig": {
            "type": "object",
            "description": "Configuration for local AEC filter",
            "required": ["device", "default_config"],
            "properties": {
                "device": {
                    "$ref": "#/$defs/Device",
                    "description": "Device for filter placement"
                },
                "default_config": {
                    "$ref": "#/$defs/AcousticEchoCancellationConfig",
                    "description": "Default AEC configuration"
                }
            },
            "additionalProperties": false
        },
        "LocalStreamingSTTConfig": {
            "type": "object",
            "description": "Configuration for local streaming STT",
            "required": [
                "stt_model_path",
                "vad_model_path",
                "stt_device",
                "vad_device",
                "default_config"
            ],
            "properties": {
                "stt_model_path": {
                    "type": "string",
                    "description": "Path to the STT model weights file"
                },
                "vad_model_path": {
                    "type": "string",
                    "description": "Path to the VAD model weights file"
                },
                "stt_device": {
                    "$ref": "#/$defs/Device",
                    "description": "Device for STT model placement"
                },
                "vad_device": {
                    "$ref": "#/$defs/Device",
                    "description": "Device for VAD model placement"
                },
                "default_config": {
                    "$ref": "#/$defs/StreamSpeechRecognitionConfig",
                    "description": "Default streaming STT configuration"
                }
            },
            "additionalProperties": false
        },
        "RemoteStreamingSTTConfig": {
            "type": "object",
            "description": "Configuration for remote streaming STT",
            "required": ["api_key", "default_config"],
            "properties": {
                "api_key": {
                    "type": "string",
                    "description": "API key for authentication"
                },
                "default_config": {
                    "$ref": "#/$defs/StreamSpeechRecognitionConfig",
                    "description": "Default streaming STT configuration"
                }
            },
            "additionalProperties": false
        },
        "LocalSTTConfig": {
            "type": "object",
            "description": "Configuration for local STT",
            "required": ["model_path", "device", "default_config"],
            "properties": {
                "model_path": {
                    "type": "string",
                    "description": "Path to the model weights file"
                },
                "device": {
                    "$ref": "#/$defs/Device",
                    "description": "Device for model placement"
                },
                "default_config": {
                    "$ref": "#/$defs/SpeechRecognitionConfig",
                    "description": "Default STT configuration"
                }
            },
            "additionalProperties": false
        },
        "RemoteSTTConfig": {
            "type": "object",
            "description": "Configuration for remote STT",
            "required": ["api_key", "default_config"],
            "properties": {
                "api_key": {
                    "type": "string",
                    "description": "API key for authentication"
                },
                "default_config": {
                    "$ref": "#/$defs/SpeechRecognitionConfig",
                    "description": "Default STT configuration"
                }
            },
            "additionalProperties": false
        },
        "RemoteTTSConfig": {
            "type": "object",
            "description": "Configuration for remote TTS",
            "required": ["api_key", "synthesis_config"],
            "properties": {
                "api_key": {
                    "type": "string",
                    "description": "API key for authentication"
                },
                "synthesis_config": {
                    "$ref": "#/$defs/SpeechSynthesisConfig",
                    "description": "Speech synthesis configuration for the TTS model"
                }
            },
            "additionalProperties": false
        },
        "LocalVADConfig": {
            "type": "object",
            "description": "Configuration for local VAD",
            "required": ["model_path", "device", "default_config"],
            "properties": {
                "model_path": {
                    "type": "string",
                    "description": "Path to the model weights file"
                },
                "device": {
                    "$ref": "#/$defs/Device",
                    "description": "Device for model placement"
                },
                "default_config": {
                    "$ref": "#/$defs/VoiceActivityDetectionConfig",
                    "description": "Default VAD configuration"
                }
            },
            "additionalProperties": false
        },
        "CompiledIntent": {
            "type": "object",
            "description": "Compiled intent with embeddings for runtime use",
            "allOf": [
                {
                    "$ref": "#/$defs/Intent"
                },
                {
                    "type": "object",
                    "properties": {
                        "normalized_phrases": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "Normalized training phrases"
                        },
                        "phrase_embeddings": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "number"
                                }
                            },
                            "description": "Embeddings for the phrases"
                        }
                    },
                    "additionalProperties": false
                }
            ]
        },
        "LocalKnowledgeConfig": {
            "type": "object",
            "description": "Configuration for local knowledge",
            "required": ["knowledge_compile_config", "embedder_component_id"],
            "properties": {
                "knowledge_compile_config": {
                    "$ref": "#/$defs/KnowledgeCompileConfig",
                    "description": "Configuration for knowledge compilation"
                },
                "embedder_component_id": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "ID of the embedder component to use"
                }
            },
            "additionalProperties": false
        },
        "RemoteKnowledgeConfig": {
            "type": "object",
            "description": "Configuration for remote knowledge",
            "required": ["knowledge_compile_config", "api_key"],
            "properties": {
                "knowledge_compile_config": {
                    "$ref": "#/$defs/KnowledgeCompileConfig",
                    "description": "Configuration for knowledge compilation"
                },
                "api_key": {
                    "type": "string",
                    "description": "API key for authentication"
                },
                "language": {
                    "type": "object",
                    "description": "Language configuration, defaults to English",
                    "properties": {
                        "code": {
                            "type": "string",
                            "default": "en",
                            "description": "Language code"
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": false
        },
        "NERCreationConfig": {
            "type": "object",
            "description": "Configuration for creating NER",
            "required": ["entities"],
            "properties": {
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/Entity"
                    },
                    "description": "List of entities to recognize"
                }
            },
            "additionalProperties": false
        },
        "TextClassifierCreationConfig": {
            "type": "object",
            "description": "Configuration for creating text classifier",
            "required": ["model_weights_path", "supported_classes"],
            "properties": {
                "model_weights_path": {
                    "type": "string",
                    "description": "Path to the model weights file"
                },
                "supported_classes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of supported classification classes"
                }
            },
            "additionalProperties": false
        },
        "MCPClientCreationConfig": {
            "type": "object",
            "description": "Configuration for creating MCP client",
            "required": ["session_config"],
            "properties": {
                "session_config": {
                    "$ref": "#/$defs/MCPSessionCreationConfig",
                    "description": "Configuration for MCP session"
                }
            },
            "additionalProperties": false
        },
        "MCPSessionCreationConfig": {
            "type": "object",
            "description": "Configuration for creating MCP session",
            "required": ["transport", "endpoint", "auth_config"],
            "properties": {
                "transport": {
                    "type": "string",
                    "description": "Transport protocol for MCP session"
                },
                "endpoint": {
                    "type": "string",
                    "description": "Endpoint for MCP session"
                },
                "auth_config": {
                    "$ref": "#/$defs/MCPAuthConfig",
                    "description": "Authentication configuration for MCP session"
                }
            },
            "additionalProperties": false
        },
        "MCPAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for MCP",
            "required": ["type", "config"],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": ["http", "stdio"],
                    "description": "Type of authentication configuration"
                },
                "config": {
                    "type": "object",
                    "description": "Authentication configuration object"
                }
            },
            "additionalProperties": false,
            "allOf": [
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "http"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "config": {
                                "$ref": "#/$defs/MCPHttpAuthConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "stdio"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "config": {
                                "$ref": "#/$defs/MCPStdioAuthConfig"
                            }
                        }
                    }
                }
            ]
        },
        "MCPHttpAuthConfig": {
            "type": "object",
            "description": "HTTP authentication configuration for MCP",
            "required": ["api_key"],
            "properties": {
                "api_key": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "API key for HTTP authentication"
                }
            },
            "additionalProperties": false
        },
        "MCPStdioAuthConfig": {
            "type": "object",
            "description": "Stdio authentication configuration for MCP",
            "required": ["env"],
            "properties": {
                "env": {
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TemplateString"
                            }
                        ]
                    },
                    "description": "Environment variables for stdio authentication"
                }
            },
            "additionalProperties": false
        },
        "Condition": {
            "type": "object",
            "description": "Defines conditions that trigger a goal activation or completion",
            "required": ["intents", "required_goals"],
            "properties": {
                "intents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of intent identifiers that can trigger activation or completion"
                },
                "detect": {
                    "type": "string",
                    "description": "Text description of the condition that must be met"
                },
                "required_goals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of goals that must be completed before this goal can be activated"
                }
            },
            "additionalProperties": false
        },
        "Goal": {
            "type": "object",
            "description": "Goal definition for goal advancement",
            "required": ["name"],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Unique identifier of the goal"
                },
                "motivation": {
                    "type": "string",
                    "description": "Motivation or purpose of the goal"
                },
                "repeatable": {
                    "anyOf": [
                        {
                            "type": "boolean",
                            "default": false
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Whether the goal can be repeated"
                },
                "activation_condition": {
                    "$ref": "#/$defs/Condition",
                    "description": "Conditions required to trigger this goal"
                },
                "completion_condition": {
                    "$ref": "#/$defs/Condition",
                    "description": "Conditions required to complete this goal"
                }
            },
            "additionalProperties": false
        },
        "Intent": {
            "type": "object",
            "description": "Intent definition for intent matching",
            "required": ["name", "phrases"],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Unique identifier of the intent"
                },
                "phrases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of training phrases for the intent"
                }
            },
            "additionalProperties": false
        },
        "KeywordGroup": {
            "type": "object",
            "description": "Keyword group definition for keyword matching",
            "required": ["name", "keywords"],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Unique identifier of the keyword group"
                },
                "keywords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of keywords in the group"
                }
            },
            "additionalProperties": false
        },
        "RetrievalConfig": {
            "type": "object",
            "description": "Configuration for knowledge retrieval",
            "properties": {
                "threshold": {
                    "anyOf": [
                        {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Similarity threshold for retrieval"
                },
                "top_k": {
                    "anyOf": [
                        {
                            "type": "integer",
                            "minimum": 1
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Number of top results to retrieve"
                }
            },
            "additionalProperties": false
        },
        "PromptTemplate": {
            "type": "object",
            "description": "Template for generating prompts",
            "required": ["prompt_template"],
            "properties": {
                "prompt_template": {
                    "type": "string",
                    "description": "Template string for generating prompts"
                }
            },
            "additionalProperties": false
        },
        "TextContent": {
            "type": "object",
            "description": "Text content that can be static or templated",
            "required": ["type"],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": ["text", "template"],
                    "description": "Type of content: 'text' for direct text, 'template' for Jinja template"
                }
            },
            "allOf": [
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "text"
                            }
                        }
                    },
                    "then": {
                        "required": ["type", "value"],
                        "properties": {
                            "type": {
                                "const": "text"
                            },
                            "value": {
                                "type": "string",
                                "description": "Direct text content"
                            }
                        },
                        "additionalProperties": false
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "template"
                            }
                        }
                    },
                    "then": {
                        "required": ["type", "template"],
                        "properties": {
                            "type": {
                                "const": "template"
                            },
                            "template": {
                                "type": "string",
                                "description": "Jinja template string for generating content"
                            }
                        },
                        "additionalProperties": false
                    }
                }
            ]
        },
        "ImageContent": {
            "type": "object",
            "description": "Image content for multimodal messages",
            "required": ["type"],
            "properties": {
                "type": {
                    "const": "image",
                    "description": "Content type identifier"
                },
                "url": {
                    "type": "string",
                    "description": "Image URL as static string"
                },
                "url_template": {
                    "type": "string",
                    "description": "Image URL as Jinja template"
                },
                "detail": {
                    "type": "string",
                    "default": "auto",
                    "description": "Detail level for image processing: 'low', 'high', or 'auto'"
                }
            },
            "additionalProperties": false,
            "anyOf": [
                {
                    "required": ["url"]
                },
                {
                    "required": ["url_template"]
                }
            ],
            "not": {
                "allOf": [
                    {
                        "required": ["url"]
                    },
                    {
                        "required": ["url_template"]
                    }
                ]
            }
        },
        "ChatMessageContent": {
            "type": "object",
            "description": "Content item for multimodal messages",
            "oneOf": [
                {
                    "$ref": "#/$defs/TextContent"
                },
                {
                    "$ref": "#/$defs/ImageContent"
                }
            ]
        },
        "MessageTemplate": {
            "type": "object",
            "description": "Template for chat messages supporting both single text and multimodal content",
            "required": ["role"],
            "properties": {
                "role": {
                    "type": "string",
                    "enum": ["user", "assistant", "system"],
                    "description": "Role of the message sender"
                },
                "content": {
                    "$ref": "#/$defs/TextContent",
                    "description": "Single text content."
                },
                "content_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/ChatMessageContent"
                    },
                    "description": "Multiple content items"
                }
            },
            "additionalProperties": false,
            "not": {
                "allOf": [
                    {
                        "required": ["content"]
                    },
                    {
                        "required": ["content_items"]
                    }
                ]
            },
            "anyOf": [
                {
                    "required": ["role", "content"]
                },
                {
                    "required": ["role", "content_items"]
                }
            ]
        },
        "Tool": {
            "type": "object",
            "description": "Tool definition for LLM function calling",
            "required": ["name", "description"],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the tool"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the tool's purpose"
                },
                "properties": {
                    "type": "object",
                    "description": "JSON schema for tool parameters",
                    "additionalProperties": true
                }
            },
            "additionalProperties": false
        },
        "ClassThreshold": {
            "type": "object",
            "description": "Threshold configuration for classification classes",
            "required": ["label", "threshold"],
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Name of the classification class"
                },
                "threshold": {
                    "anyOf": [
                        {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Confidence threshold for the class"
                }
            },
            "additionalProperties": false
        },
        "TextClassifierConfig": {
            "type": "object",
            "description": "Configuration for text classification",
            "required": ["classes"],
            "properties": {
                "classes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/ClassThreshold"
                    },
                    "description": "List of class threshold configurations"
                }
            },
            "additionalProperties": false
        },
        "Voice": {
            "type": "object",
            "description": "Voice configuration for TTS synthesis",
            "required": ["speaker_id"],
            "properties": {
                "speaker_id": {
                    "type": "string",
                    "description": "Unique identifier for the speaker"
                },
                "language_code": {
                    "type": "string",
                    "description": "Optional language code for the voice"
                }
            },
            "additionalProperties": false
        },
        "SpeechSynthesisPostprocessingConfig": {
            "type": "object",
            "description": "Configuration for postprocessing the generated speech waveform",
            "properties": {
                "sample_rate": {
                    "anyOf": [
                        {
                            "type": "integer",
                            "minimum": 1
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Sample rate for the output waveform"
                }
            },
            "additionalProperties": false
        },
        "SpeechSynthesisInferenceConfig": {
            "type": "object",
            "description": "Configuration for model inference parameters in TTS",
            "properties": {
                "temperature": {
                    "anyOf": [
                        {
                            "type": "number",
                            "exclusiveMinimum": 0,
                            "maximum": 2
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "The temperature of the model. Range (0, 2]. Higher temperature means more creative output."
                },
                "pitch": {
                    "anyOf": [
                        {
                            "type": "number",
                            "minimum": -5.0,
                            "maximum": 5.0
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Modifies the pitch of the synthesized voice. Range [-5.0, 5.0]. 0.0 corresponds to the original pitch."
                },
                "speaking_rate": {
                    "anyOf": [
                        {
                            "type": "number",
                            "minimum": 0.5,
                            "maximum": 1.5
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Speaking rate/speed, in the range [0.5, 1.5]. 1.0 is the normal native speed."
                }
            },
            "additionalProperties": false
        },
        "InworldSpeechSynthesisConfig": {
            "type": "object",
            "description": "Configuration for Inworld speech synthesis",
            "properties": {
                "model_id": {
                    "type": "string",
                    "description": "Model ID (v2 or v3) to choose model version"
                },
                "postprocessing": {
                    "$ref": "#/$defs/SpeechSynthesisPostprocessingConfig",
                    "description": "Postprocessing configuration"
                },
                "inference": {
                    "$ref": "#/$defs/SpeechSynthesisInferenceConfig",
                    "description": "Inference configuration"
                }
            },
            "additionalProperties": false
        },
        "ElevenLabsSpeechSynthesisConfig": {
            "type": "object",
            "description": "Configuration for ElevenLabs speech synthesis",
            "properties": {
                "query_params": {
                    "type": "object",
                    "description": "Query parameters for ElevenLabs API",
                    "properties": {
                        "enable_logging": {
                            "anyOf": [
                                {
                                    "type": "boolean",
                                    "default": false
                                },
                                {
                                    "$ref": "#/$defs/TemplateString"
                                }
                            ],
                            "description": "Whether to enable logging"
                        },
                        "output_format": {
                            "type": "string",
                            "enum": [
                                "MP3_22050_32",
                                "MP3_44100_32",
                                "MP3_44100_64",
                                "MP3_44100_96",
                                "MP3_44100_128",
                                "MP3_44100_192"
                            ],
                            "default": "MP3_22050_32",
                            "description": "Output format for the audio"
                        }
                    },
                    "additionalProperties": false
                },
                "request_params": {
                    "type": "object",
                    "description": "Request parameters for ElevenLabs API",
                    "properties": {
                        "model_id": {
                            "type": "string",
                            "default": "eleven_monolingual_v2",
                            "description": "Model ID to use"
                        },
                        "apply_text_normalization": {
                            "type": "string",
                            "enum": ["AUTO", "ON", "OFF"],
                            "default": "AUTO",
                            "description": "Text normalization setting"
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": false
        },
        "SpeechSynthesisConfig": {
            "type": "object",
            "description": "Configuration for speech synthesis",
            "required": ["config", "type"],
            "properties": {
                "config": {
                    "type": "object",
                    "description": "Configuration variant for different TTS providers"
                },
                "type": {
                    "type": "string",
                    "enum": ["inworld", "elevenlabs"]
                }
            },
            "additionalProperties": false,
            "allOf": [
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "inworld"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "config": {
                                "$ref": "#/$defs/InworldSpeechSynthesisConfig"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "elevenlabs"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "config": {
                                "$ref": "#/$defs/ElevenLabsSpeechSynthesisConfig"
                            }
                        }
                    }
                }
            ]
        },
        "NodeErrorConfig": {
            "type": "object",
            "description": "Configuration for node error handling behavior",
            "properties": {
                "max_retries": {
                    "anyOf": [
                        {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "The maximum number of retry attempts for failed operations"
                },
                "error_codes": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "OK",
                            "CANCELLED",
                            "UNKNOWN",
                            "INVALID_ARGUMENT",
                            "DEADLINE_EXCEEDED",
                            "NOT_FOUND",
                            "ALREADY_EXISTS",
                            "PERMISSION_DENIED",
                            "RESOURCE_EXHAUSTED",
                            "FAILED_PRECONDITION",
                            "ABORTED",
                            "OUT_OF_RANGE",
                            "UNIMPLEMENTED",
                            "INTERNAL",
                            "UNAVAILABLE",
                            "DATA_LOSS",
                            "UNAUTHENTICATED"
                        ]
                    },
                    "description": "List of status codes that should trigger retry behavior"
                },
                "fallback_result": {
                    "type": "object",
                    "description": "Default result to return if all retries are exhausted",
                    "additionalProperties": true
                }
            },
            "additionalProperties": false
        },
        "BaseNodeExecutionConfig": {
            "type": "object",
            "description": "Base configuration for node execution",
            "properties": {
                "report_to_client": {
                    "anyOf": [
                        {
                            "type": "boolean",
                            "default": false
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Whether to report node execution result to the client"
                },
                "error_handling": {
                    "$ref": "#/$defs/NodeErrorConfig",
                    "description": "Optional error handling configuration for the node"
                }
            }
        },
        "GoalAdvancementNodeCreationConfig": {
            "type": "object",
            "description": "Configuration for creating goal advancement nodes",
            "required": ["goals"],
            "properties": {
                "goals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/Goal"
                    },
                    "description": "List of goals for the node"
                }
            },
            "additionalProperties": false
        },
        "GoalAdvancementNodeExecutionConfig": {
            "type": "object",
            "description": "Configuration for executing goal advancement nodes",
            "required": ["llm_component_id"],
            "properties": {
                "report_to_client": {
                    "anyOf": [
                        {
                            "type": "boolean",
                            "default": false
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Whether to report node execution result to the client"
                },
                "error_handling": {
                    "$ref": "#/$defs/NodeErrorConfig",
                    "description": "Optional error handling configuration for the node"
                },
                "llm_component_id": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "ID of the LLM component to use"
                },
                "text_generation_config": {
                    "$ref": "#/$defs/TextGenerationConfig",
                    "description": "Configuration for text generation"
                }
            },
            "additionalProperties": false
        },
        "IntentNodeCreationConfig": {
            "type": "object",
            "description": "Configuration for creating intent nodes",
            "required": ["intents"],
            "properties": {
                "intents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/Intent"
                    },
                    "description": "List of intents for the node"
                },
                "embedder_component_id": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "ID of the embedder component to use"
                },
                "llm_component_id": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "ID of the LLM component to use"
                }
            },
            "additionalProperties": false
        },
        "IntentNodeExecutionConfig": {
            "type": "object",
            "description": "Configuration for executing intent nodes",
            "required": ["matcher_config"],
            "properties": {
                "report_to_client": {
                    "anyOf": [
                        {
                            "type": "boolean",
                            "default": false
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Whether to report node execution result to the client"
                },
                "error_handling": {
                    "$ref": "#/$defs/NodeErrorConfig",
                    "description": "Optional error handling configuration for the node"
                },
                "matcher_config": {
                    "$ref": "#/$defs/IntentMatcherConfig",
                    "description": "Configuration for intent matching"
                }
            },
            "additionalProperties": false
        },
        "KeywordMatcherNodeCreationConfig": {
            "type": "object",
            "description": "Configuration for creating keyword matcher nodes",
            "required": ["keyword_groups"],
            "properties": {
                "keyword_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/KeywordGroup"
                    },
                    "description": "List of keyword groups for the node"
                }
            },
            "additionalProperties": false
        },
        "KnowledgeNodeCreationConfig": {
            "type": "object",
            "description": "Configuration for creating knowledge nodes",
            "required": [
                "knowledge_id",
                "knowledge_records",
                "knowledge_component_id"
            ],
            "properties": {
                "knowledge_id": {
                    "type": "string",
                    "description": "ID of the knowledge base"
                },
                "knowledge_records": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "List of knowledge records"
                    }
                },
                "knowledge_component_id": {
                    "type": "string",
                    "description": "ID of the knowledge component to use"
                }
            },
            "additionalProperties": false
        },
        "KnowledgeNodeExecutionConfig": {
            "type": "object",
            "description": "Configuration for executing knowledge nodes",
            "required": ["knowledge_ids", "retrieval_config"],
            "properties": {
                "report_to_client": {
                    "anyOf": [
                        {
                            "type": "boolean",
                            "default": false
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Whether to report node execution result to the client"
                },
                "error_handling": {
                    "$ref": "#/$defs/NodeErrorConfig",
                    "description": "Optional error handling configuration for the node"
                },
                "knowledge_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of knowledge base IDs to search"
                },
                "retrieval_config": {
                    "$ref": "#/$defs/RetrievalConfig",
                    "description": "Configuration for knowledge retrieval"
                }
            },
            "additionalProperties": false
        },
        "LLMChatNodeExecutionConfig": {
            "type": "object",
            "description": "Configuration for executing LLM chat nodes",
            "required": ["llm_component_id"],
            "properties": {
                "report_to_client": {
                    "anyOf": [
                        {
                            "type": "boolean",
                            "default": false
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Whether to report node execution result to the client"
                },
                "error_handling": {
                    "$ref": "#/$defs/NodeErrorConfig",
                    "description": "Optional error handling configuration for the node"
                },
                "llm_component_id": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "ID of the LLM component to use"
                },
                "text_generation_config": {
                    "$ref": "#/$defs/TextGenerationConfig",
                    "description": "Configuration for text generation"
                },
                "stream": {
                    "anyOf": [
                        {
                            "type": "boolean",
                            "default": false
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Whether to stream the response"
                }
            },
            "additionalProperties": false
        },
        "LLMChatRequestBuilderNodeExecutionConfig": {
            "type": "object",
            "description": "Configuration for executing LLM chat request builder nodes",
            "properties": {
                "report_to_client": {
                    "anyOf": [
                        {
                            "type": "boolean",
                            "default": false
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Whether to report node execution result to the client"
                },
                "error_handling": {
                    "$ref": "#/$defs/NodeErrorConfig",
                    "description": "Optional error handling configuration for the node"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/MessageTemplate"
                    },
                    "description": "List of message templates for the chat"
                },
                "tools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/Tool"
                    },
                    "description": "List of tools available for function calling"
                },
                "tool_choice": {
                    "type": "object",
                    "description": "Controls which tool is called by the model",
                    "properties": {
                        "type": {
                            "type": "string",
                            "enum": ["string", "function"],
                            "description": "The type of tool choice"
                        },
                        "value": {
                            "type": "string",
                            "description": "String value when type is 'string': 'auto', 'none', 'required'"
                        },
                        "function": {
                            "type": "object",
                            "description": "Function choice when type is 'function'",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "The type of the tool: typically 'function'"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "The name of the function to be called"
                                }
                            },
                            "required": ["type", "name"]
                        }
                    },
                    "required": ["type"],
                    "oneOf": [
                        {
                            "properties": {
                                "type": { "const": "string" }
                            },
                            "required": ["value"]
                        },
                        {
                            "properties": {
                                "type": { "const": "function" }
                            },
                            "required": ["function"]
                        }
                    ]
                },
                "response_format": {
                    "type": "string",
                    "enum": ["text", "json", "json_schema"],
                    "default": "text",
                    "description": "Format that the model must output. Defaults to text."
                }
            },
            "additionalProperties": false
        },
        "LLMCompletionNodeExecutionConfig": {
            "type": "object",
            "description": "Configuration for executing LLM completion nodes",
            "required": ["llm_component_id"],
            "properties": {
                "report_to_client": {
                    "anyOf": [
                        {
                            "type": "boolean",
                            "default": false
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Whether to report node execution result to the client"
                },
                "error_handling": {
                    "$ref": "#/$defs/NodeErrorConfig",
                    "description": "Optional error handling configuration for the node"
                },
                "llm_component_id": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "ID of the LLM component to use"
                },
                "text_generation_config": {
                    "$ref": "#/$defs/TextGenerationConfig",
                    "description": "Configuration for text generation"
                },
                "stream": {
                    "type": "boolean",
                    "description": "Whether to stream the response",
                    "default": false
                }
            },
            "additionalProperties": false
        },
        "LLMPromptBuilderNodeExecutionConfig": {
            "type": "object",
            "description": "Configuration for executing LLM prompt builder nodes",
            "required": ["prompt_template"],
            "properties": {
                "report_to_client": {
                    "anyOf": [
                        {
                            "type": "boolean",
                            "default": false
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Whether to report node execution result to the client"
                },
                "error_handling": {
                    "$ref": "#/$defs/NodeErrorConfig",
                    "description": "Optional error handling configuration for the node"
                },
                "prompt_template": {
                    "type": "string",
                    "description": "Template string for generating prompts"
                }
            },
            "additionalProperties": false
        },
        "RandomCannedTextNodeExecutionConfig": {
            "type": "object",
            "description": "Configuration for executing random canned text nodes",
            "required": ["canned_phrases"],
            "properties": {
                "report_to_client": {
                    "anyOf": [
                        {
                            "type": "boolean",
                            "default": false
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Whether to report node execution result to the client"
                },
                "error_handling": {
                    "$ref": "#/$defs/NodeErrorConfig",
                    "description": "Optional error handling configuration for the node"
                },
                "canned_phrases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of canned phrases to randomly select from"
                }
            },
            "additionalProperties": false
        },
        "STTNodeExecutionConfig": {
            "type": "object",
            "description": "Configuration for executing STT nodes",
            "required": ["stt_component_id"],
            "properties": {
                "report_to_client": {
                    "anyOf": [
                        {
                            "type": "boolean",
                            "default": false
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Whether to report node execution result to the client"
                },
                "error_handling": {
                    "$ref": "#/$defs/NodeErrorConfig",
                    "description": "Optional error handling configuration for the node"
                },
                "stt_component_id": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "ID of the STT component to use"
                }
            },
            "additionalProperties": false
        },
        "TextClassifierNodeCreationConfig": {
            "type": "object",
            "description": "Configuration for creating text classifier nodes",
            "required": ["embedder_component_id", "classifier_config"],
            "properties": {
                "embedder_component_id": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "ID of the embedder component to use"
                },
                "classifier_config": {
                    "$ref": "#/$defs/TextClassifierCreationConfig",
                    "description": "Configuration for creating the text classifier"
                }
            },
            "additionalProperties": false
        },
        "TextClassifierNodeExecutionConfig": {
            "type": "object",
            "description": "Configuration for executing text classifier nodes",
            "properties": {
                "report_to_client": {
                    "anyOf": [
                        {
                            "type": "boolean",
                            "default": false
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Whether to report node execution result to the client"
                },
                "error_handling": {
                    "$ref": "#/$defs/NodeErrorConfig",
                    "description": "Optional error handling configuration for the node"
                },
                "classifier_config": {
                    "$ref": "#/$defs/TextClassifierConfig",
                    "description": "Configuration for text classification"
                }
            },
            "additionalProperties": false
        },
        "TTSNodeExecutionConfig": {
            "type": "object",
            "description": "Configuration for executing TTS nodes",
            "required": ["tts_component_id"],
            "properties": {
                "report_to_client": {
                    "anyOf": [
                        {
                            "type": "boolean",
                            "default": false
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Whether to report node execution result to the client"
                },
                "error_handling": {
                    "$ref": "#/$defs/NodeErrorConfig",
                    "description": "Optional error handling configuration for the node"
                },
                "tts_component_id": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "ID of the TTS component to use"
                },
                "voice": {
                    "$ref": "#/$defs/Voice",
                    "description": "The voice to use for the TTSNode"
                },
                "synthesis_config": {
                    "$ref": "#/$defs/SpeechSynthesisConfig",
                    "description": "The speech synthesis configuration for the TTSNode"
                }
            },
            "additionalProperties": false
        },
        "SafetyCheckerNodeExecutionConfig": {
            "type": "object",
            "description": "Configuration for executing safety checker nodes",
            "properties": {
                "report_to_client": {
                    "anyOf": [
                        {
                            "type": "boolean",
                            "default": false
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Whether to report node execution result to the client"
                },
                "error_handling": {
                    "$ref": "#/$defs/NodeErrorConfig",
                    "description": "Optional error handling configuration for the node"
                },
                "safety_config": {
                    "type": "object",
                    "description": "Optional safety configuration parameters",
                    "additionalProperties": true
                }
            },
            "additionalProperties": false
        },
        "IntentEmbedderMatchNodeExecutionConfig": {
            "type": "object",
            "description": "Configuration for executing intent embedder match nodes",
            "properties": {
                "report_to_client": {
                    "anyOf": [
                        {
                            "type": "boolean",
                            "default": false
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Whether to report node execution result to the client"
                },
                "error_handling": {
                    "$ref": "#/$defs/NodeErrorConfig",
                    "description": "Optional error handling configuration for the node"
                },
                "similarity_threshold": {
                    "anyOf": [
                        {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1,
                            "default": 0.0
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Minimum similarity threshold for matches"
                }
            },
            "additionalProperties": false
        },
        "MemoryUpdateNodeCreationConfig": {
            "type": "object",
            "description": "Configuration for executing memory update nodes",
            "properties": {
                "report_to_client": {
                    "anyOf": [
                        {
                            "type": "boolean",
                            "default": false
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Whether to report node execution result to the client"
                },
                "error_handling": {
                    "$ref": "#/$defs/NodeErrorConfig",
                    "description": "Optional error handling configuration for the node"
                }
            },
            "additionalProperties": false
        },
        "MCPListToolsNodeExecutionConfig": {
            "type": "object",
            "description": "Configuration for executing MCP list tools nodes",
            "required": ["mcp_component_id"],
            "properties": {
                "report_to_client": {
                    "anyOf": [
                        {
                            "type": "boolean",
                            "default": false
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Whether to report node execution result to the client"
                },
                "error_handling": {
                    "$ref": "#/$defs/NodeErrorConfig",
                    "description": "Optional error handling configuration for the node"
                },
                "mcp_component_id": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "ID of the MCP component to retrieve from ComponentRegistry"
                }
            },
            "additionalProperties": false
        },
        "MCPCallToolNodeExecutionConfig": {
            "type": "object",
            "description": "Configuration for executing MCP call tool nodes",
            "required": ["mcp_component_id"],
            "properties": {
                "report_to_client": {
                    "anyOf": [
                        {
                            "type": "boolean",
                            "default": false
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Whether to report node execution result to the client"
                },
                "error_handling": {
                    "$ref": "#/$defs/NodeErrorConfig",
                    "description": "Optional error handling configuration for the node"
                },
                "mcp_component_id": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "ID of the MCP component to retrieve from ComponentRegistry"
                }
            },
            "additionalProperties": false
        },
        "IntentLLMPromptVariablesBuilderNodeExecutionConfig": {
            "type": "object",
            "description": "Configuration for executing intent LLM prompt variables builder nodes",
            "properties": {
                "report_to_client": {
                    "anyOf": [
                        {
                            "type": "boolean",
                            "default": false
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Whether to report node execution result to the client"
                },
                "error_handling": {
                    "$ref": "#/$defs/NodeErrorConfig",
                    "description": "Optional error handling configuration for the node"
                },
                "max_intents_for_llm": {
                    "anyOf": [
                        {
                            "type": "integer",
                            "minimum": 1
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Maximum number of intents to include in prompt"
                },
                "max_phrases_per_intent": {
                    "anyOf": [
                        {
                            "type": "integer",
                            "minimum": 1
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Maximum number of phrases per intent to include"
                },
                "embedding_similarity_threshold": {
                    "anyOf": [
                        {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Minimum similarity threshold for matched intents to be included in the LLM prompt"
                }
            },
            "additionalProperties": false
        },
        "IntentTopNFilterNodeExecutionConfig": {
            "type": "object",
            "description": "Configuration for executing intent top N filter nodes",
            "properties": {
                "report_to_client": {
                    "anyOf": [
                        {
                            "type": "boolean",
                            "default": false
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Whether to report node execution result to the client"
                },
                "error_handling": {
                    "$ref": "#/$defs/NodeErrorConfig",
                    "description": "Optional error handling configuration for the node"
                },
                "top_n_intents": {
                    "anyOf": [
                        {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Number of top intents to keep after filtering"
                }
            },
            "additionalProperties": false
        },
        "MemoryRetrieveNodeExecutionConfig": {
            "type": "object",
            "description": "Configuration for executing memory retrieve nodes",
            "required": ["retrieval_config"],
            "properties": {
                "report_to_client": {
                    "anyOf": [
                        {
                            "type": "boolean",
                            "default": false
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Whether to report node execution result to the client"
                },
                "error_handling": {
                    "$ref": "#/$defs/NodeErrorConfig",
                    "description": "Optional error handling configuration for the node"
                },
                "retrieval_config": {
                    "$ref": "#/$defs/RetrievalConfig",
                    "description": "Configuration for memory retrieval"
                },
                "return_rolling_summary": {
                    "anyOf": [
                        {
                            "type": "boolean",
                            "default": false
                        },
                        {
                            "$ref": "#/$defs/TemplateString"
                        }
                    ],
                    "description": "Whether to include the rolling summary in the returned knowledge records"
                }
            },
            "additionalProperties": false
        }
    }
}

import { Node, NodePropsInterface } from '../node';
import { NodeExecutionConfig } from '../NodeExecutionConfig';
/**
 * Interface for MCP Call Tool Node creation properties.
 */
export interface MCPCallToolNodePropsInterface extends NodePropsInterface {
    /** Optional execution configuration for the MCP call tool node */
    executionConfig?: NodeExecutionConfig;
}
/**
 * @internal
 * @warning This programmatic variant of MCPCallToolNode is not tested and not exported on top level of package.
 * The main purpose of this node, as of now, is just to support documentation generation. Later, we will either rework it or support it only in the DSL.
 */
/**
 * Node for calling MCP tools in the graph.
 * Processes tool call data to execute MCP tools and return results.
 * @input {ListToolCallData} {@link ListToolCallData} - The data type that MCPCallToolNode accepts as input
 * @output {ListToolCallsResults} {@link ListToolCallsResults} - The data type that MCPCallToolNode accepts as output
 */
export declare class MCPCallToolNode extends Node {
    private executionConfig?;
    /**
     * Creates a new MCPCallToolNode instance.
     *
     * @param props - MCP call tool node creation properties
     * @internal
     */
    constructor(props: MCPCallToolNodePropsInterface);
    /**
     * Cleans up resources associated with this MCP call tool node.
     */
    destroy(): void;
}

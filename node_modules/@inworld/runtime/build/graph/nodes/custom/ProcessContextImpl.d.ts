import { JsProcessContext } from '../../../internal/graph/nodes/napi-types';
import { ExecutionConfig } from '../NodeExecutionConfig';
import { DataStore } from './custom_context_datastore';
export interface ProcessContext {
    getConfig(): any;
    getDatastore(): DataStore;
}
/**
 * Provides access to execution context information for custom nodes.
 */
export declare class ProcessContextImpl implements ProcessContext {
    private external;
    private datastore;
    constructor(external: JsProcessContext);
    /**
     * Gets the datastore for the execution.
     * @returns The datastore
     */
    getDatastore(): DataStore;
    /**
     * Gets the execution ID from the context.
     * @returns The execution ID
     */
    getExecutionId(): string;
    /**
     * Gets the execution configuration from the context.
     * @returns The execution configuration
     */
    getExecutionConfig(): ExecutionConfig;
    /**
     * Gets the variant string from the context.
     * @returns The variant string
     */
    getVariant(): string;
    /**
     * Checks if the execution has been cancelled.
     * @returns True if cancelled, false otherwise
     */
    isCancelled(): boolean;
    /**
     * Gets the configuration helper from the context.
     * @returns The configuration object
     */
    getConfig(): any;
    /**
     * Gets the external reference for C++ interop.
     * @returns The external reference
     */
    getExternal(): any;
}

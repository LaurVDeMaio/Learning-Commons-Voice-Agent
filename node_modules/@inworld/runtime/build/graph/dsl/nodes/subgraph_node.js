"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubgraphNode = void 0;
const abstract_node_1 = require("./abstract_node");
/**
 * Subgraph node that represents a compiled subgraph.
 * This node allows you to execute another graph as a component within the current graph,
 * enabling modular and reusable graph architectures.
 *
 * @input {any} any - The data type that SubgraphNode accepts as input
 * @output {any} any - The data type that SubgraphNode outputs
 *
 * @example
 * ```typescript
 * const subgraphNode = new SubgraphNode({
 *   id: 'intent-processing-subgraph',
 *   parameters: {
 *     confidence_threshold: 0.8,
 *     max_intents: 5,
 *     fallback_enabled: true
 *   }
 * });
 * ```
 */
class SubgraphNode extends abstract_node_1.AbstractNode {
    /**
     * Creates a new SubgraphNode instance.
     *
     * @param props - Configuration for the subgraph node.
     */
    constructor(props) {
        super(props);
        this.subgraphId = props.subgraphId;
        this.parameters = props.parameters;
    }
    /**
     * Converts the subgraph node to a graph configuration node.
     *
     * @returns The configured subgraph node for graph execution
     */
    toGraphConfigNode() {
        return {
            id: this.id,
            type: 'SubgraphNode',
            subgraph_id: this.subgraphId,
            parameters: this.parameters,
        };
    }
}
exports.SubgraphNode = SubgraphNode;

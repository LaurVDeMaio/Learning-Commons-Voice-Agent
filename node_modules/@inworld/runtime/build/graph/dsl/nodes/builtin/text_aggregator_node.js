"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TextAggregatorNode = void 0;
const abstract_node_1 = require("./abstract_node");
/**
 * Text aggregator node for combining multiple text pieces into a single text output.
 * This node processes various text inputs and combines them into a unified text result.
 *
 * @input {String | GraphTypes.TextStream | GraphTypes.LLMChatResponse} {@link String} | {@link GraphTypes.TextStream} | {@link GraphTypes.LLMChatResponse} - The data type that TextAggregatorNode accepts as input
 * @output {String} {@link String} - The data type that TextAggregatorNode outputs
 *
 * @example
 * ```typescript
 * const aggregatorNode = new TextAggregatorNode({
 *   id: 'my-aggregator-node',
 *   reportToClient: true
 * });
 * ```
 */
class TextAggregatorNode extends abstract_node_1.AbstractNode {
    /**
     * Creates a new TextAggregatorNode instance.
     *
     * @param props - Configuration for the text aggregator node
     */
    constructor(props = {}) {
        super(props);
    }
    /**
     * Converts the text aggregator node to a graph configuration node.
     *
     * @returns The configured text aggregator node for graph execution
     */
    toGraphConfigNode() {
        return {
            id: this.id,
            type: 'TextAggregatorNode',
            execution_config: {
                type: 'NodeExecutionConfig',
                properties: {
                    report_to_client: this.reportToClient,
                },
            },
        };
    }
}
exports.TextAggregatorNode = TextAggregatorNode;

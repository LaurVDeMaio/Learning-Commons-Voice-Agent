import { Node as GraphConfigNode } from '../../graph_config_schema';
import { AbstractNode, AbstractNodeProps } from './AbstractNode';
/**
 * Configuration interface for RandomCannedTextNode creation.
 */
interface RandomCannedTextNodeProps extends AbstractNodeProps {
    /** List of phrases to randomly select from */
    cannedPhrases: string[];
}
/**
 * Random canned text node for selecting a random text from a list of predefined phrases.
 * This node outputs a randomly selected phrase from the configured list, useful for
 * generating varied responses or fallback messages.
 *
 * @input {any} any - The data type that RandomCannedTextNode accepts as input
 * @output {any} any - The data type that RandomCannedTextNode accepts as output
 *
 * @example
 * ```typescript
 * const cannedTextNode = new RandomCannedTextNode({
 *   id: 'greeting-node',
 *   cannedPhrases: [
 *     'Hello! How can I help you?',
 *     'Hi there! What can I do for you?',
 *     'Welcome! How may I assist you today?'
 *   ]
 * });
 * ```
 */
export declare class RandomCannedTextNode extends AbstractNode {
    private cannedPhrases;
    /**
     * Creates a new RandomCannedTextNode instance.
     *
     * @param props - Configuration for the random canned text node
     */
    constructor(props: RandomCannedTextNodeProps);
    /**
     * Converts the random canned text node to a graph configuration node.
     *
     * @returns The configured random canned text node for graph execution
     */
    protected toGraphConfigNode(): GraphConfigNode;
}
export {};

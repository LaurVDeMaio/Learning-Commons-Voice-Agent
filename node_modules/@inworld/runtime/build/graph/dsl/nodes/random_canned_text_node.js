"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RandomCannedTextNode = void 0;
const abstract_node_1 = require("./abstract_node");
/**
 * Random canned text node for selecting a random text from a list of predefined phrases.
 * This node outputs a randomly selected phrase from the configured list, useful for
 * generating varied responses or fallback messages.
 *
 * @input {any} any - The data type that RandomCannedTextNode accepts as input
 * @output {String} {@link String} - The data type that RandomCannedTextNode outputs
 *
 * @example
 * ```typescript
 * const cannedTextNode = new RandomCannedTextNode({
 *   id: 'greeting-node',
 *   cannedPhrases: [
 *     'Hello! How can I help you?',
 *     'Hi there! What can I do for you?',
 *     'Welcome! How may I assist you today?'
 *   ]
 * });
 * ```
 */
class RandomCannedTextNode extends abstract_node_1.AbstractNode {
    /**
     * Creates a new RandomCannedTextNode instance.
     *
     * @param props - Configuration for the random canned text node.
     */
    constructor(props) {
        super(props);
        this.cannedPhrases = props.cannedPhrases;
    }
    /**
     * Converts the random canned text node to a graph configuration node.
     *
     * @returns The configured random canned text node for graph execution
     */
    toGraphConfigNode() {
        return {
            id: this.id,
            type: 'RandomCannedTextNode',
            execution_config: {
                type: 'RandomCannedTextNodeExecutionConfig',
                properties: {
                    canned_phrases: this.cannedPhrases,
                },
            },
        };
    }
}
exports.RandomCannedTextNode = RandomCannedTextNode;

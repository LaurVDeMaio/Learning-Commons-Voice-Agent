"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProxyNode = void 0;
const abstract_node_1 = require("./abstract_node");
/**
 * Proxy node for simple data passing.
 * This node passes through any input data without modification, useful for routing
 * or creating connection points in graphs.
 *
 * @input {any} any - The data type that ProxyNode accepts as input
 * @output {any} any - The data type that ProxyNode outputs
 *
 * @example
 * ```typescript
 * const proxyNode = new ProxyNode({
 *   id: 'my-proxy-node',
 *   reportToClient: false
 * });
 * ```
 */
class ProxyNode extends abstract_node_1.AbstractNode {
    /**
     * Creates a new ProxyNode instance.
     *
     * @remarks
     * Accepts the common node options from {@link AbstractNodeProps}. If omitted,
     * sensible defaults are applied.
     *
     * @param props - Configuration for the proxy node.
     */
    constructor(props = {}) {
        super(props);
    }
    /**
     * Converts the proxy node to a graph configuration node.
     *
     * @returns The configured proxy node for graph execution
     */
    toGraphConfigNode() {
        return {
            id: this.id,
            type: 'ProxyNode',
            execution_config: {
                type: 'NodeExecutionConfig',
                properties: {
                    report_to_client: this.reportToClient,
                },
            },
        };
    }
}
exports.ProxyNode = ProxyNode;

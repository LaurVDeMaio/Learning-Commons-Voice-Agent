"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RemoteTTSComponent = void 0;
const snakify_1 = __importDefault(require("../utils/snakify"));
const abstract_component_1 = require("./abstract_component");
/**
 * Remote TTS (Text-to-Speech) component for audio synthesis services.
 * Provides access to external text-to-speech services to convert text input
 * into audio output with configurable voice parameters.
 *
 * @example
 * ```typescript
 * const ttsComponent = new RemoteTTSComponent({
 *   synthesisConfig: {
 *     voice: 'alloy',
 *     speed: 1.0,
 *     pitch: 0
 *   }
 * });
 * ```
 */
class RemoteTTSComponent extends abstract_component_1.AbstractComponent {
    /**
     * Creates a new RemoteTTSComponent instance.
     *
     * @param {Object} props - Configuration for the remote TTS component
     * @param {string} [props.id] - Optional explicit component identifier. Human-readable identifier would be generated if omitted.
     * @param {import('../../../primitives/tts').SpeechSynthesisConfigInterface} [props.synthesisConfig] - TTS synthesis config (camelCase required)
     */
    constructor(props) {
        super(props);
        this.synthesisConfig = props.synthesisConfig;
    }
    /**
     * Converts the remote TTS component to a graph configuration component.
     *
     * @returns The configured remote TTS component for graph execution
     */
    toGraphConfigComponent() {
        return {
            id: this.id,
            type: 'TTSInterface',
            creation_config: {
                type: 'RemoteTTSConfig',
                properties: {
                    synthesis_config: this.synthesisConfig
                        ? (0, snakify_1.default)(this.synthesisConfig)
                        : undefined,
                },
            },
        };
    }
}
exports.RemoteTTSComponent = RemoteTTSComponent;

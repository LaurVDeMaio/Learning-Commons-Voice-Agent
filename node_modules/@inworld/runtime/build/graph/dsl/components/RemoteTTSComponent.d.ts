import { SpeechSynthesisConfigInterface } from '../../../primitives/tts';
import { Camelize } from '../constants';
import { Component as GraphConfigComponent } from '../graph_config_schema';
import { AbstractComponent, AbstractComponentProps } from './AbstractComponent';
/**
 * Configuration interface for RemoteTTSComponent creation.
 */
interface RemoteTTSComponentProps extends AbstractComponentProps {
    /** Speech synthesis configuration */
    synthesisConfig?: Camelize<SpeechSynthesisConfigInterface>;
}
/**
 * Remote TTS (Text-to-Speech) component for audio synthesis services.
 * This component provides access to external text-to-speech services
 * for converting text input into audio output with configurable voice parameters.
 *
 * @example
 * ```typescript
 * const ttsComponent = new RemoteTTSComponent({
 *   id: 'my-tts-component',
 *   synthesisConfig: {
 *     voice: 'alloy',
 *     speed: 1.0,
 *     pitch: 1.0
 *   }
 * });
 * ```
 */
export declare class RemoteTTSComponent extends AbstractComponent {
    private synthesisConfig?;
    /**
     * Creates a new RemoteTTSComponent instance.
     *
     * @param props - Configuration for the remote TTS component
     */
    constructor(props: RemoteTTSComponentProps);
    /**
     * Converts the remote TTS component to a graph configuration component.
     *
     * @returns The configured remote TTS component for graph execution
     */
    protected toGraphConfigComponent(): GraphConfigComponent;
}
export {};

import { Component as GraphConfigComponent } from '../graph_config_schema';
import { AbstractComponent, AbstractComponentProps } from './AbstractComponent';
/**
 * Configuration interface for RemoteEmbedderComponent creation.
 */
interface RemoteEmbedderComponentProps extends AbstractComponentProps {
    /** LLM provider (e.g., 'openai', 'anthropic', 'inworld') */
    provider?: string;
    /** Model name to use. Model name is specific to the selected provider */
    modelName?: string;
}
/**
 * Remote embedder component for text embedding services.
 * This component provides access to external text embedding providers for converting
 * text into numerical vector representations used for similarity matching and retrieval.
 *
 * @example
 * ```typescript
 * const embedderComponent = new RemoteEmbedderComponent({
 *   id: 'my-embedder-component',
 *   provider: 'openai',
 *   modelName: 'text-embedding-ada-002',
 * });
 * ```
 */
export declare class RemoteEmbedderComponent extends AbstractComponent {
    private provider;
    private modelName;
    /**
     * Creates a new RemoteEmbedderComponent instance.
     *
     * @param props - Configuration for the remote embedder component
     */
    constructor(props: RemoteEmbedderComponentProps);
    /**
     * Converts the remote embedder component to a graph configuration component.
     *
     * @returns The configured remote embedder component for graph execution
     */
    protected toGraphConfigComponent(): GraphConfigComponent;
}
export {};

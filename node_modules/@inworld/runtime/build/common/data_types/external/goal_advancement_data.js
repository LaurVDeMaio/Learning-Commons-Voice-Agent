"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GoalAdvancementData = void 0;
const expose_binary_1 = require("../../../expose_binary");
const string_1 = require("../../vector/string");
const base_data_1 = require("./base_data");
/**
 * Represents a goal advancement.
 */
class GoalAdvancementData extends base_data_1.BaseData {
    /**
     * @internal
     * Constructs a new GoalAdvancement instance.
     *
     * @param {ExternalReference} external - The external reference to create the instance from
     */
    constructor(external) {
        super(external);
    }
    /**
     * @internal
     * Creates a new GoalAdvancement instance from an external reference.
     *
     * @param {ExternalReference} external - The external reference to create the instance from
     * @returns {GoalAdvancementData} A new GoalAdvancement instance
     */
    static fromExternal(external) {
        return new GoalAdvancementData(external);
    }
    /**
     * Retrieves the goals.
     *
     * @returns {GoalAdvancementInterface | undefined} An array of goal advancement, or undefined if no goal advancement is found
     */
    getGoals() {
        const goalAdvancement = expose_binary_1.GoalAdvancementFunctions.toGoalAdvancement(this.external);
        const isValid = expose_binary_1.GoalAdvancementFunctions.isValid(goalAdvancement);
        if (!isValid) {
            return;
        }
        return {
            activatedGoals: string_1.VectorString.toArray(expose_binary_1.GoalAdvancementFunctions.getActivatedGoals(goalAdvancement)),
            completedGoals: string_1.VectorString.toArray(expose_binary_1.GoalAdvancementFunctions.getCompletedGoals(goalAdvancement)),
            currentGoals: string_1.VectorString.toArray(expose_binary_1.GoalAdvancementFunctions.getCurrentGoals(goalAdvancement)),
        };
    }
}
exports.GoalAdvancementData = GoalAdvancementData;

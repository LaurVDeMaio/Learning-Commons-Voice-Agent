"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Voice = void 0;
const expose_binary_1 = require("../../expose_binary");
/**
 * Class for representing a voice configuration.
 * Provides an interface to the native voice implementation.
 * @internal
 */
class Voice {
    /**
     * Creates a new Voice instance with the specified configuration.
     *
     * @param config - Voice configuration or speaker ID string
     */
    constructor(config) {
        this.external = null;
        this.external = expose_binary_1.VoiceFunctions.new();
        if (typeof config === 'string') {
            // Legacy support for string parameter
            expose_binary_1.VoiceFunctions.setSpeakerId(this.external, config);
        }
        else {
            // New interface support
            expose_binary_1.VoiceFunctions.setSpeakerId(this.external, config.speakerId);
            if (config.languageCode) {
                // TODO: Implement language code setting when optional_string bindings are available
                throw new Error('Language code setting is not yet supported in Node.js bindings');
            }
        }
    }
    /**
     * Returns the external reference to the native voice implementation.
     *
     * @returns External reference object
     */
    getExternal() {
        return this.external;
    }
    /**
     * Cleans up resources associated with this voice.
     */
    destroy() {
        if (this.external) {
            expose_binary_1.VoiceFunctions.delete(this.external);
            this.external = null;
        }
    }
}
exports.Voice = Voice;
